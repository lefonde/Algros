{"ast":null,"code":"var _jsxFileName = \"/home/alex/Documents/mta/year 4/final project/Algros/src/problem/components/Question.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Tab from \"../../shared/components/Navigation/Tabs\";\nimport Button from \"../../shared/components/FormElements/Button\";\nlet lastQuestionIndex = 0;\n\nconst Question = props => {\n  const [loadedQuestions, setloadedQuestions] = useState([]);\n  const [loadedQuestionIndex, setloadedQuestionIndex] = useState(0);\n  const [questionBody, setQuestionBody] = useState(\"\");\n  const [questionName, setQuestionName] = useState(\"\");\n  const [loadedTabContent, setloadedTabContent] = useState([]);\n  const [loadedMessages, setLoadedMessages] = useState([]);\n  const [isForum, setIsForum] = useState(false);\n  let messages = [];\n\n  if (props.questions.length !== 0 && props.index && props.messages.length !== 0) {\n    messages = props.messages;\n  }\n\n  useEffect(() => {\n    if (props.index !== null && Object.keys(props.questions).length !== 0) {\n      setloadedQuestionIndex(props.index);\n      setloadedQuestions(props.questions);\n      setQuestionBody(props.questions[props.index].questionBody);\n      setQuestionName(props.questions[props.index].questionName);\n      lastQuestionIndex = Object.keys(props.questions).length;\n    }\n\n    let messages = [];\n\n    if (Object.keys(props.messages).length !== 0) {\n      Object.values(props.messages).map(message => {\n        messages.push( /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 23\n          }\n        }, message.body));\n      });\n      setLoadedMessages(messages);\n      console.log(\"messages:\");\n      console.log(messages);\n    }\n  }, [props]);\n\n  const nextButtonHandler = () => {\n    props.onIndexChange(loadedQuestionIndex + 1);\n  };\n\n  const prevButtonHandler = () => {\n    props.onIndexChange(loadedQuestionIndex - 1);\n  };\n\n  const forumTabHandler = () => {\n    console.log(\"shows forum\");\n    setIsForum(true);\n  };\n\n  const questionTabHandler = () => {\n    console.log(\"shows question\");\n    setIsForum(false);\n  };\n\n  let tabContent = [{\n    title: \"Question\",\n    content: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, questionName), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, questionBody))\n  }, {\n    title: \"Forum\",\n    content: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 16\n      }\n    }, loadedMessages)\n  }];\n\n  if (!props.questions || props.questions.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, \"No questions found.\")));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, isForum && /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    onClick: prevButtonHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 23\n    }\n  }, \"New\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, tabContent.map((tab, idx) => /*#__PURE__*/React.createElement(Tab.TabPane, {\n    key: `Tab-${idx}`,\n    tab: tab.title,\n    onTabSelected: idx === 1 ? forumTabHandler : questionTabHandler,\n    onTab: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, tab.content)))))), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    disabled: loadedQuestionIndex === 1,\n    onClick: prevButtonHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, \"Prev\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    disabled: loadedQuestionIndex === lastQuestionIndex,\n    onClick: nextButtonHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, \"Next\"));\n};\n\nexport default Question;","map":{"version":3,"sources":["/home/alex/Documents/mta/year 4/final project/Algros/src/problem/components/Question.js"],"names":["React","useEffect","useState","Card","Tab","Button","lastQuestionIndex","Question","props","loadedQuestions","setloadedQuestions","loadedQuestionIndex","setloadedQuestionIndex","questionBody","setQuestionBody","questionName","setQuestionName","loadedTabContent","setloadedTabContent","loadedMessages","setLoadedMessages","isForum","setIsForum","messages","questions","length","index","Object","keys","values","map","message","push","body","console","log","nextButtonHandler","onIndexChange","prevButtonHandler","forumTabHandler","questionTabHandler","tabContent","title","content","tab","idx"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Tab from \"../../shared/components/Navigation/Tabs\";\nimport Button from \"../../shared/components/FormElements/Button\";\n\nlet lastQuestionIndex = 0;\nconst Question = (props) => {\n  const [loadedQuestions, setloadedQuestions] = useState([]);\n  const [loadedQuestionIndex, setloadedQuestionIndex] = useState(0);\n  const [questionBody, setQuestionBody] = useState(\"\");\n  const [questionName, setQuestionName] = useState(\"\");\n  const [loadedTabContent, setloadedTabContent] = useState([]);\n  const [loadedMessages, setLoadedMessages] = useState([]);\n  const [isForum, setIsForum] = useState(false);\n\n  let messages = [];\n  if (\n    props.questions.length !== 0 &&\n    props.index &&\n    props.messages.length !== 0\n  ) {\n    messages = props.messages;\n  }\n\n  useEffect(() => {\n    if (props.index !== null && Object.keys(props.questions).length !== 0) {\n      setloadedQuestionIndex(props.index);\n      setloadedQuestions(props.questions);\n      setQuestionBody(props.questions[props.index].questionBody);\n      setQuestionName(props.questions[props.index].questionName);\n      lastQuestionIndex = Object.keys(props.questions).length;\n    }\n\n    let messages = [];\n    if (Object.keys(props.messages).length !== 0) {\n      Object.values(props.messages).map((message) => {\n        messages.push(<h1>{message.body}</h1>);\n      });\n      setLoadedMessages(messages);\n      console.log(\"messages:\");\n      console.log(messages);\n    }\n  }, [props]);\n\n  const nextButtonHandler = () => {\n    props.onIndexChange(loadedQuestionIndex + 1);\n  };\n\n  const prevButtonHandler = () => {\n    props.onIndexChange(loadedQuestionIndex - 1);\n  };\n\n  const forumTabHandler = () => {\n    console.log(\"shows forum\");\n    setIsForum(true);\n  };\n\n  const questionTabHandler = () => {\n    console.log(\"shows question\");\n    setIsForum(false);\n  };\n\n  let tabContent = [\n    {\n      title: \"Question\",\n      content: (\n        <div>\n          <h1>{questionName}</h1>\n          <p>{questionBody}</p>\n        </div>\n      ),\n    },\n    {\n      title: \"Forum\",\n      content: <div>{loadedMessages}</div>,\n    },\n  ];\n\n  if (!props.questions || props.questions.length === 0) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>No questions found.</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"row\">\n        <div className=\"col text-center\">\n          {isForum && <Button\n            type=\"button\"\n            onClick={prevButtonHandler}\n          >\n            New\n          </Button>}\n          <div className=\"row text-left\">\n            <Tab>\n              {tabContent.map((tab, idx) => (\n                <Tab.TabPane\n                  key={`Tab-${idx}`}\n                  tab={tab.title}\n                  onTabSelected={\n                    idx === 1 ? forumTabHandler : questionTabHandler\n                  }\n                  onTab\n                >\n                  {tab.content}\n                </Tab.TabPane>\n              ))}\n            </Tab>\n          </div>\n        </div>\n      </div>\n      <Button\n        type=\"button\"\n        disabled={loadedQuestionIndex === 1}\n        onClick={prevButtonHandler}\n      >\n        Prev\n      </Button>\n      <Button\n        type=\"button\"\n        disabled={loadedQuestionIndex === lastQuestionIndex}\n        onClick={nextButtonHandler}\n      >\n        Next\n      </Button>\n    </React.Fragment>\n  );\n};\n\nexport default Question;\n"]},"metadata":{},"sourceType":"module"}