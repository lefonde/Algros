{"ast":null,"code":"var _jsxFileName = \"/home/alex/Documents/mta/year 4/final project/Algros/src/problem/components/Question.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Tab from \"../../shared/components/Navigation/Tabs\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Modal from \"../../shared/components/UIElements/Modal\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { useForm } from \"../../shared/hooks/form-hooks\";\nimport { VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\nimport \"./Question.css\";\nlet lastQuestionIndex = 0;\n\nconst Question = props => {\n  const [loadedQuestions, setloadedQuestions] = useState([]);\n  const [loadedQuestionIndex, setloadedQuestionIndex] = useState(0);\n  const [questionBody, setQuestionBody] = useState(\"\");\n  const [questionName, setQuestionName] = useState(\"\");\n  const [loadedMessages, setLoadedMessages] = useState([]);\n  const [showForumEntry, setShowForumEntry] = useState(false);\n  const [isForum, setIsForum] = useState(false);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [formState, inputHandler, setFormData] = useForm({\n    content: {\n      value: \"\",\n      isValid: false\n    }\n  }, false);\n\n  const forumMessageSubmitHandler = async event => {\n    event.preventDefault();\n\n    try {\n      const sentMessageResponse = await sendRequest(\"http://51.138.73.135:8080/Algors/sendMessage\", \"POST\", JSON.stringify({\n        questionId: \"1\",\n        userName: \"test14@test.com\",\n        body: formState.inputs.content.value\n      }), {});\n      console.log(\"sentMessageResponse\");\n      console.log(sentMessageResponse);\n    } catch (err) {}\n  };\n\n  useEffect(() => {\n    if (props.index !== null && Object.keys(props.questions).length !== 0) {\n      setloadedQuestionIndex(props.index);\n      setloadedQuestions(props.questions);\n      setQuestionBody(props.questions[props.index].questionBody);\n      setQuestionName(props.questions[props.index].questionName);\n      lastQuestionIndex = Object.keys(props.questions).length;\n    }\n\n    let messages = [];\n\n    if (Object.keys(props.messages).length !== 0) {\n      Object.values(props.messages).map(message => {\n        messages.push( /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 23\n          }\n        }, message.body));\n      });\n      setLoadedMessages(messages);\n      console.log(\"messages:\");\n      console.log(messages);\n    }\n  }, [props]);\n\n  const nextButtonHandler = () => props.onIndexChange(loadedQuestionIndex + 1);\n\n  const prevButtonHandler = () => props.onIndexChange(loadedQuestionIndex - 1);\n\n  const openForumEntryHandler = () => setShowForumEntry(true);\n\n  const closeForumEntryHandler = () => setShowForumEntry(false);\n\n  const forumTabHandler = () => setIsForum(true);\n\n  const questionTabHandler = () => setIsForum(false);\n\n  let tabContent = [{\n    title: \"Question\",\n    content: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, questionName), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, questionBody))\n  }, {\n    title: \"Forum\",\n    content: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 16\n      }\n    }, loadedMessages)\n  }];\n\n  if (!props.questions || props.questions.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, \"No questions found.\")));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    show: showForumEntry,\n    onCancel: closeForumEntryHandler,\n    header: \"Course subjects\" // change this to courses name\n    ,\n    contentClass: \"course-item__modal-content\",\n    footerClass: \"course-item__modal-actions\",\n    footer: /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      onClick: forumMessageSubmitHandler,\n      disabled: !formState.isValid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, \"Submit\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, \"Forum entry form\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"content\",\n    type: \"text\",\n    placeholder: \"new message content\",\n    onInput: inputHandler,\n    validators: [VALIDATOR_REQUIRE()],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tabs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, tabContent.map((tab, idx) => /*#__PURE__*/React.createElement(Tab.TabPane, {\n    className: \"tab\",\n    key: `Tab-${idx}`,\n    tab: tab.title,\n    onTabSelected: idx === 1 ? forumTabHandler : questionTabHandler,\n    onTab: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }, tab.content)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"forum-new\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, isForum && /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    onClick: openForumEntryHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, \"New\")), !isForum && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"questions-nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    disabled: loadedQuestionIndex === 1,\n    onClick: prevButtonHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }, \"Prev\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    disabled: loadedQuestionIndex === lastQuestionIndex,\n    onClick: nextButtonHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, \"Next\"))));\n};\n\nexport default Question;","map":{"version":3,"sources":["/home/alex/Documents/mta/year 4/final project/Algros/src/problem/components/Question.js"],"names":["React","useEffect","useState","Card","Tab","Button","Modal","Input","useHttpClient","useForm","VALIDATOR_REQUIRE","lastQuestionIndex","Question","props","loadedQuestions","setloadedQuestions","loadedQuestionIndex","setloadedQuestionIndex","questionBody","setQuestionBody","questionName","setQuestionName","loadedMessages","setLoadedMessages","showForumEntry","setShowForumEntry","isForum","setIsForum","isLoading","error","sendRequest","clearError","formState","inputHandler","setFormData","content","value","isValid","forumMessageSubmitHandler","event","preventDefault","sentMessageResponse","JSON","stringify","questionId","userName","body","inputs","console","log","err","index","Object","keys","questions","length","messages","values","map","message","push","nextButtonHandler","onIndexChange","prevButtonHandler","openForumEntryHandler","closeForumEntryHandler","forumTabHandler","questionTabHandler","tabContent","title","tab","idx"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Tab from \"../../shared/components/Navigation/Tabs\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Modal from \"../../shared/components/UIElements/Modal\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { useForm } from \"../../shared/hooks/form-hooks\";\nimport { VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\n\nimport \"./Question.css\"\n\nlet lastQuestionIndex = 0;\nconst Question = (props) => {\n  const [loadedQuestions, setloadedQuestions] = useState([]);\n  const [loadedQuestionIndex, setloadedQuestionIndex] = useState(0);\n  const [questionBody, setQuestionBody] = useState(\"\");\n  const [questionName, setQuestionName] = useState(\"\");\n  const [loadedMessages, setLoadedMessages] = useState([]);\n  const [showForumEntry, setShowForumEntry] = useState(false);\n  const [isForum, setIsForum] = useState(false);\n\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      content: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const forumMessageSubmitHandler = async (event) => {\n    event.preventDefault();\n\n    try {\n      const sentMessageResponse = await sendRequest(\n        \"http://51.138.73.135:8080/Algors/sendMessage\",\n        \"POST\",\n        JSON.stringify({\n          questionId: \"1\",\n          userName: \"test14@test.com\",\n          body: formState.inputs.content.value,\n        }),\n        {}\n      );\n\n      console.log(\"sentMessageResponse\");\n      console.log(sentMessageResponse);\n    } catch (err) {}\n  };\n\n  useEffect(() => {\n    if (props.index !== null && Object.keys(props.questions).length !== 0) {\n      setloadedQuestionIndex(props.index);\n      setloadedQuestions(props.questions);\n      setQuestionBody(props.questions[props.index].questionBody);\n      setQuestionName(props.questions[props.index].questionName);\n      lastQuestionIndex = Object.keys(props.questions).length;\n    }\n\n    let messages = [];\n    if (Object.keys(props.messages).length !== 0) {\n      Object.values(props.messages).map((message) => {\n        messages.push(<h1>{message.body}</h1>);\n      });\n      setLoadedMessages(messages);\n      console.log(\"messages:\");\n      console.log(messages);\n    }\n  }, [props]);\n\n  const nextButtonHandler = () => props.onIndexChange(loadedQuestionIndex + 1);\n\n  const prevButtonHandler = () => props.onIndexChange(loadedQuestionIndex - 1);\n\n  const openForumEntryHandler = () => setShowForumEntry(true);\n\n  const closeForumEntryHandler = () => setShowForumEntry(false);\n\n  const forumTabHandler = () => setIsForum(true);\n\n  const questionTabHandler = () => setIsForum(false);\n\n  let tabContent = [\n    {\n      title: \"Question\",\n      content: (\n        <div>\n          <h1>{questionName}</h1>\n          <p>{questionBody}</p>\n        </div>\n      ),\n    },\n    {\n      title: \"Forum\",\n      content: <div>{loadedMessages}</div>,\n    },\n  ];\n\n  if (!props.questions || props.questions.length === 0) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>No questions found.</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <Modal\n        show={showForumEntry}\n        onCancel={closeForumEntryHandler}\n        header=\"Course subjects\" // change this to courses name\n        contentClass=\"course-item__modal-content\"\n        footerClass=\"course-item__modal-actions\"\n        footer={\n          <React.Fragment>\n            <Button\n              type=\"button\"\n              onClick={forumMessageSubmitHandler}\n              disabled={!formState.isValid}\n            >\n              Submit\n            </Button>\n          </React.Fragment>\n        }\n      >\n        <div className=\"map-container\">\n          <h2>Forum entry form</h2>\n          <form>\n            <Input\n              element=\"input\"\n              id=\"content\"\n              type=\"text\"\n              placeholder=\"new message content\"\n              onInput={inputHandler}\n              validators={[VALIDATOR_REQUIRE()]}\n            />\n          </form>\n        </div>\n      </Modal>\n      <div className=\"question-content\">\n        <div className=\"tabs\">\n          <Tab>\n            {tabContent.map((tab, idx) => (\n              <Tab.TabPane\n                className=\"tab\"\n                key={`Tab-${idx}`}\n                tab={tab.title}\n                onTabSelected={idx === 1 ? forumTabHandler : questionTabHandler}\n                onTab\n              >\n                {tab.content}\n              </Tab.TabPane>\n            ))}\n          </Tab>\n        </div>\n        <div className=\"forum-new\">\n          {isForum && (\n            <Button type=\"button\" onClick={openForumEntryHandler}>\n              New\n            </Button>\n          )}\n        </div>\n        {!isForum && <div className=\"questions-nav\">\n          <Button\n            type=\"button\"\n            disabled={loadedQuestionIndex === 1}\n            onClick={prevButtonHandler}\n          >\n            Prev\n          </Button>\n          <Button\n            type=\"button\"\n            disabled={loadedQuestionIndex === lastQuestionIndex}\n            onClick={nextButtonHandler}\n          >\n            Next\n          </Button>\n        </div>}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Question;\n"]},"metadata":{},"sourceType":"module"}