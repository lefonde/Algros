{"ast":null,"code":"var _jsxFileName = \"/home/alex/Documents/mta/year 4/final project/Algros/src/problem/components/Question.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Tab from \"../../shared/components/Navigation/Tabs\";\nimport Button from \"../../shared/components/FormElements/Button\";\nlet lastQuestionIndex = 0;\n\nconst Question = props => {\n  const [loadedQuestions, setloadedQuestions] = useState([]);\n  const [loadedQuestionIndex, setloadedQuestionIndex] = useState(0);\n  const [questionBody, setQuestionBody] = useState(\"\");\n  const [questionName, setQuestionName] = useState(\"\");\n  const [loadedTabContent, setloadedTabContent] = useState([]);\n  const [loadedMessages, setLoadedMessages] = useState([]);\n  let messages = [];\n\n  if (props.questions.length !== 0 && props.index && props.messages.length !== 0) {\n    messages = props.messages;\n  }\n\n  useEffect(() => {\n    if (props.index !== null && Object.keys(props.questions).length !== 0) {\n      setloadedQuestionIndex(props.index);\n      setloadedQuestions(props.questions);\n      setQuestionBody(props.questions[props.index].questionBody);\n      setQuestionName(props.questions[props.index].questionName);\n      lastQuestionIndex = Object.keys(props.questions).length;\n    }\n\n    let messages = [];\n\n    if (Object.keys(props.messages).length !== 0) {\n      Object.values(loadedMessages).map(message => {\n        messages.push(message.body);\n      });\n      setLoadedMessages(messages);\n    }\n  }, [props]);\n\n  const nextButtonHandler = () => {\n    props.onIndexChange(loadedQuestionIndex + 1);\n  };\n\n  const prevButtonHandler = () => {\n    props.onIndexChange(loadedQuestionIndex - 1);\n  };\n\n  let tabContent = [{\n    title: \"Question\",\n    content: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, questionName), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, questionBody))\n  }, {\n    title: \"Forum\",\n    content: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, loadedMessages.map(message => {\n      /*#__PURE__*/\n      React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }, message.body);\n    }))\n  }];\n\n  if (!props.questions || props.questions.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, \"No questions found.\")));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, tabContent.map((tab, idx) => /*#__PURE__*/React.createElement(Tab.TabPane, {\n    key: `Tab-${idx}`,\n    tab: tab.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, tab.content)))))), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    disabled: loadedQuestionIndex === 1,\n    onClick: prevButtonHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, \"Prev\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    disabled: loadedQuestionIndex === lastQuestionIndex,\n    onClick: nextButtonHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, \"Next\"));\n};\n\nexport default Question;","map":{"version":3,"sources":["/home/alex/Documents/mta/year 4/final project/Algros/src/problem/components/Question.js"],"names":["React","useEffect","useState","Card","Tab","Button","lastQuestionIndex","Question","props","loadedQuestions","setloadedQuestions","loadedQuestionIndex","setloadedQuestionIndex","questionBody","setQuestionBody","questionName","setQuestionName","loadedTabContent","setloadedTabContent","loadedMessages","setLoadedMessages","messages","questions","length","index","Object","keys","values","map","message","push","body","nextButtonHandler","onIndexChange","prevButtonHandler","tabContent","title","content","tab","idx"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Tab from \"../../shared/components/Navigation/Tabs\";\nimport Button from \"../../shared/components/FormElements/Button\";\n\nlet lastQuestionIndex = 0;\nconst Question = (props) => {\n  const [loadedQuestions, setloadedQuestions] = useState([]);\n  const [loadedQuestionIndex, setloadedQuestionIndex] = useState(0);\n  const [questionBody, setQuestionBody] = useState(\"\");\n  const [questionName, setQuestionName] = useState(\"\");\n  const [loadedTabContent, setloadedTabContent] = useState([]);\n  const [loadedMessages, setLoadedMessages] = useState([]);\n\n  let messages = [];\n  if (\n    props.questions.length !== 0 &&\n    props.index &&\n    props.messages.length !== 0\n  ) {\n    messages = props.messages;\n  }\n\n  useEffect(() => {\n    if (props.index !== null && Object.keys(props.questions).length !== 0) {\n      setloadedQuestionIndex(props.index);\n      setloadedQuestions(props.questions);\n      setQuestionBody(props.questions[props.index].questionBody);\n      setQuestionName(props.questions[props.index].questionName);\n      lastQuestionIndex = Object.keys(props.questions).length;\n    }\n\n    let messages = []\n    if (Object.keys(props.messages).length !== 0) {\n      Object.values(loadedMessages).map((message) => {\n        messages.push(message.body)\n      })\n      \n      setLoadedMessages(messages);\n    }\n  }, [props]);\n\n  const nextButtonHandler = () => {\n    props.onIndexChange(loadedQuestionIndex + 1);\n  };\n\n  const prevButtonHandler = () => {\n    props.onIndexChange(loadedQuestionIndex - 1);\n  };\n\n  let tabContent = [\n    {\n      title: \"Question\",\n      content: (\n        <div>\n          <h1>{questionName}</h1>\n          <p>{questionBody}</p>\n        </div>\n      ),\n    },\n    {\n      title: \"Forum\",\n      content: (\n        <div>\n          {loadedMessages.map((message) => {\n            <h1>{message.body}</h1>\n          })}\n        </div>\n      ),\n    },\n  ];\n\n  if (!props.questions || props.questions.length === 0) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>No questions found.</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"row\">\n        <div className=\"col text-center\">\n          <div className=\"row text-left\">\n            <Tab>\n              {tabContent.map((tab, idx) => (\n                <Tab.TabPane key={`Tab-${idx}`} tab={tab.title}>\n                  {tab.content}\n                </Tab.TabPane>\n              ))}\n            </Tab>\n          </div>\n        </div>\n      </div>\n      <Button\n        type=\"button\"\n        disabled={loadedQuestionIndex === 1}\n        onClick={prevButtonHandler}\n      >\n        Prev\n      </Button>\n      <Button\n        type=\"button\"\n        disabled={loadedQuestionIndex === lastQuestionIndex}\n        onClick={nextButtonHandler}\n      >\n        Next\n      </Button>\n    </React.Fragment>\n  );\n};\n\nexport default Question;\n"]},"metadata":{},"sourceType":"module"}