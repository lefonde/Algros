{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saris\\\\Documents\\\\Alex\\\\final project BAK 2\\\\src\\\\courses\\\\pages\\\\Courses.js\";\nimport React, { useEffect, useState } from \"react\";\nimport ScrollArea from \"react-scrollbar\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport CoursesList from \"../components/CoursesList\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport \"./Courses.css\";\n\nconst Courses = () => {\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [loadedAllCourses, setLoadedAllCourses] = useState([]);\n  const [loadedUserCourses, setLoadedUserCourses] = useState([]);\n  const debug = true;\n  useEffect(() => {\n    document.body.style.background = \"linear-gradient(180deg, #FFFFFF 50%, rgba(226, 211, 175, 0.25) 50%)\";\n    document.body.style.backgroundRepeat = \"no-repeat\";\n    document.body.style.height = \"100%\";\n    document.body.style.margin = \"0\";\n    document.body.style.backgroundAttachment = \"fixed\";\n\n    if (debug) {\n      testCourses = {\n        1: {\n          courseName: \"sum course\",\n          subjects: \"base, array\",\n          courseId: 1\n        },\n        2: {\n          courseName: \"squre course\",\n          subjects: \"base\",\n          courseId: 2\n        }\n      };\n      setLoadedAllCourses(testCourses);\n      isLoading = false;\n      return;\n    }\n\n    const fetchAllCourses = async () => {\n      try {\n        const allCoursesResponse = await sendRequest(\"http://51.138.73.135:8080/Algors/allCourses\");\n        console.log(allCoursesResponse);\n        setLoadedAllCourses(allCoursesResponse.courses);\n      } catch (err) {}\n    };\n\n    const fetchUserCourses = async () => {\n      try {\n        const userCoursesResponse = await sendRequest(\"http://51.138.73.135:8080/Algors/userCourses\", \"POST\", JSON.stringify({\n          userId: \"1\"\n        }), {});\n        setLoadedUserCourses(userCoursesResponse.courses);\n      } catch (err) {}\n    };\n\n    fetchUserCourses();\n    fetchAllCourses();\n  }, [sendRequest]);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), isLoading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  })), !isLoading && /*#__PURE__*/React.createElement(CoursesList, {\n    items: loadedUserCourses,\n    className: \"course-list__list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), !isLoading && /*#__PURE__*/React.createElement(CoursesList, {\n    items: loadedAllCourses,\n    className: \"course-list__list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Courses;","map":{"version":3,"sources":["C:/Users/saris/Documents/Alex/final project BAK 2/src/courses/pages/Courses.js"],"names":["React","useEffect","useState","ScrollArea","ErrorModal","CoursesList","LoadingSpinner","useHttpClient","Courses","isLoading","error","sendRequest","clearError","loadedAllCourses","setLoadedAllCourses","loadedUserCourses","setLoadedUserCourses","debug","document","body","style","background","backgroundRepeat","height","margin","backgroundAttachment","testCourses","courseName","subjects","courseId","fetchAllCourses","allCoursesResponse","console","log","courses","err","fetchUserCourses","userCoursesResponse","JSON","stringify","userId"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ScrollArea from \"react-scrollbar\";\n\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport CoursesList from \"../components/CoursesList\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nimport \"./Courses.css\";\n\nconst Courses = () => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedAllCourses, setLoadedAllCourses] = useState([]);\n  const [loadedUserCourses, setLoadedUserCourses] = useState([]);\n\n  const debug = true;\n\n  useEffect(() => {\n    document.body.style.background =\n      \"linear-gradient(180deg, #FFFFFF 50%, rgba(226, 211, 175, 0.25) 50%)\";\n    document.body.style.backgroundRepeat = \"no-repeat\";\n    document.body.style.height = \"100%\";\n    document.body.style.margin = \"0\";\n    document.body.style.backgroundAttachment = \"fixed\";\n\n    if (debug) {\n      testCourses = {\n        1: { courseName: \"sum course\", subjects: \"base, array\", courseId: 1 },\n        2: { courseName: \"squre course\", subjects: \"base\", courseId: 2 },\n      };\n\n      setLoadedAllCourses(testCourses);\n      isLoading = false;\n      return;\n    }\n\n    const fetchAllCourses = async () => {\n      try {\n        const allCoursesResponse = await sendRequest(\n          \"http://51.138.73.135:8080/Algors/allCourses\"\n        );\n        console.log(allCoursesResponse);\n        setLoadedAllCourses(allCoursesResponse.courses);\n      } catch (err) {}\n    };\n\n    const fetchUserCourses = async () => {\n      try {\n        const userCoursesResponse = await sendRequest(\n          \"http://51.138.73.135:8080/Algors/userCourses\",\n          \"POST\",\n          JSON.stringify({\n            userId: \"1\",\n          }),\n          {}\n        );\n        setLoadedUserCourses(userCoursesResponse.courses);\n      } catch (err) {}\n    };\n\n    fetchUserCourses();\n    fetchAllCourses();\n  }, [sendRequest]);\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && (\n        <CoursesList items={loadedUserCourses} className=\"course-list__list\" />\n      )}\n      {!isLoading && (\n        <CoursesList items={loadedAllCourses} className=\"course-list__list\" />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Courses;\n"]},"metadata":{},"sourceType":"module"}