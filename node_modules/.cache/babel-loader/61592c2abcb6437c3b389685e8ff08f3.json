{"ast":null,"code":"var _jsxFileName = \"/home/alex/Documents/mta/year 4/final project/Algros/src/problem/components/Question.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Tab from \"../../shared/components/Navigation/Tabs\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Modal from \"../../shared/components/UIElements/Modal\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport userIcon from \"./user-icon.svg\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { useForm } from \"../../shared/hooks/form-hooks\";\nimport { VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\nimport \"./Question.css\";\nlet lastQuestionIndex = 0;\nvar messgateContent;\nvar messageTitle;\n\nconst Question = props => {\n  const [loadedQuestions, setloadedQuestions] = useState([]);\n  const [loadedQuestionIndex, setloadedQuestionIndex] = useState(0);\n  const [questionBody, setQuestionBody] = useState(\"\");\n  const [questionName, setQuestionName] = useState(\"\");\n  const [loadedMessages, setLoadedMessages] = useState([]);\n  const [showForumEntry, setShowForumEntry] = useState(false);\n  const [showMessage, setShowMessage] = useState(false);\n  const [isForum, setIsForum] = useState(false);\n  const [msgContent, setMsgContent] = useState(\"\");\n  const [msgTitle, setMsgTitle] = useState(\"\");\n  const [msgUser, setMsgUser] = useState(\"\");\n  const [msgDate, setMsgDate] = useState(\"\");\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [formState, inputHandler, setFormData] = useForm({\n    content: {\n      value: \"\",\n      isValid: false\n    },\n    header: {\n      value: \"\",\n      isValid: false\n    }\n  }, false);\n\n  const forumMessageSubmitHandler = async event => {\n    event.preventDefault();\n\n    try {\n      const sentMessageResponse = await sendRequest(\"http://51.138.73.135:8080/Algors/sendMessage\", \"POST\", JSON.stringify({\n        questionId: \"1\",\n        userName: \"test14@test.com\",\n        body: formState.inputs.header.value + \"^^\" + formState.inputs.content.value\n      }), {});\n      console.log(\"sentMessageResponse\");\n      console.log(sentMessageResponse);\n      closeForumEntryHandler();\n    } catch (err) {}\n  };\n\n  const openMessageHandler = (content, title, user, date) => {\n    setMsgContent(content);\n    setMsgTitle(title);\n    setMsgUser(user);\n    setMsgDate(date);\n    setShowMessage(true);\n  };\n\n  const closeMessageHandler = () => setShowMessage(false);\n\n  useEffect(() => {\n    if (props.index !== null && Object.keys(props.questions).length !== 0) {\n      setloadedQuestionIndex(props.index);\n      setloadedQuestions(props.questions);\n      setQuestionBody(props.questions[props.index].questionBody);\n      setQuestionName(props.questions[props.index].questionName);\n      lastQuestionIndex = Object.keys(props.questions).length;\n    }\n\n    let messages = [];\n\n    if (Object.keys(props.messages).length !== 0) {\n      Object.values(props.messages).map(message => {\n        const bodySplit = message.body.split(\"^^\");\n        const messageTitle = bodySplit[0];\n        const messageContent = bodySplit[1];\n        messages.push( /*#__PURE__*/React.createElement(Card, {\n          className: \"forum-message__card\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"forum-message__card_button\",\n          onClick: () => {\n            openMessageHandler(messageContent, messageTitle, message.userName, message.messageDate);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"forum-message__card__left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          className: \"center\",\n          src: userIcon,\n          alt: \"user-icon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"forum-message__card__right\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"forum-message__card__right__top\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 19\n          }\n        }, messageTitle)), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"forum-message__card__right__buttom\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 19\n          }\n        }, message.userName, \" posted at \", message.messageDate))))));\n      });\n      setLoadedMessages(messages);\n      console.log(\"messages:\");\n      console.log(messages);\n    }\n  }, [props]);\n\n  const nextButtonHandler = () => props.onIndexChange(loadedQuestionIndex + 1);\n\n  const prevButtonHandler = () => props.onIndexChange(loadedQuestionIndex - 1);\n\n  const openForumEntryHandler = () => setShowForumEntry(true);\n\n  const closeForumEntryHandler = () => setShowForumEntry(false);\n\n  const forumTabHandler = () => setIsForum(true);\n\n  const questionTabHandler = () => setIsForum(false);\n\n  let tabContent = [{\n    title: \"Question\",\n    content: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }, questionName), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }\n    }, questionBody))\n  }, {\n    title: \"Forum\",\n    content: /*#__PURE__*/React.createElement(\"div\", {\n      className: \"forum-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 16\n      }\n    }, loadedMessages)\n  }];\n\n  if (!props.questions || props.questions.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }\n    }, \"No questions found.\")));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    className: \"new-message__modal\",\n    show: showForumEntry,\n    onCancel: closeForumEntryHandler,\n    header: \"Course subjects\" // change this to courses name\n    ,\n    headerClass: \"new-message__modal-header\",\n    contentClass: \"course-item__modal-content\",\n    footerClass: \"course-item__modal-actions\",\n    footer: /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      onClick: forumMessageSubmitHandler,\n      disabled: !formState.isValid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }\n    }, \"Submit\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new-message__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }\n  }, \"Forum entry form\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"header\",\n    type: \"text\",\n    placeholder: \"new message header\",\n    onInput: inputHandler,\n    validators: [VALIDATOR_REQUIRE()],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    element: \"textarea\",\n    id: \"content\",\n    type: \"textarea\",\n    rows: \"23\",\n    placeholder: \"new message content\",\n    onInput: inputHandler,\n    validators: [VALIDATOR_REQUIRE()],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Modal, {\n    className: \"forum-message__modal\",\n    show: showMessage,\n    onCancel: closeMessageHandler,\n    header: \"Forum message\" // change this to courses name\n    ,\n    headerClass: \"forum-message__modal-header\",\n    contentClass: \"forum-message__modal-content\",\n    footerClass: \"course-item__modal-actions\",\n    footer: /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: closeMessageHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 13\n      }\n    }, \"CLOSE\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 11\n    }\n  }, \"posted by \", msgUser, \" at \", msgDate), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 11\n    }\n  }, msgTitle), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 11\n    }\n  }, msgContent))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tabs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 11\n    }\n  }, tabContent.map((tab, idx) => /*#__PURE__*/React.createElement(Tab.TabPane, {\n    className: \"tab\",\n    key: `Tab-${idx}`,\n    tab: tab.title,\n    onTabSelected: idx === 1 ? forumTabHandler : questionTabHandler,\n    onTab: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 15\n    }\n  }, tab.content)))), isForum && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"forum-new\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    onClick: openForumEntryHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }\n  }, \"New\")), !isForum && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"questions-nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    disabled: loadedQuestionIndex === 1,\n    onClick: prevButtonHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }\n  }, \"Prev\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    disabled: loadedQuestionIndex === lastQuestionIndex,\n    onClick: nextButtonHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }, \"Next\"))));\n};\n\nexport default Question;","map":{"version":3,"sources":["/home/alex/Documents/mta/year 4/final project/Algros/src/problem/components/Question.js"],"names":["React","useEffect","useState","Card","Tab","Button","Modal","Input","useHttpClient","useForm","VALIDATOR_REQUIRE","lastQuestionIndex","messgateContent","messageTitle","Question","props","loadedQuestions","setloadedQuestions","loadedQuestionIndex","setloadedQuestionIndex","questionBody","setQuestionBody","questionName","setQuestionName","loadedMessages","setLoadedMessages","showForumEntry","setShowForumEntry","showMessage","setShowMessage","isForum","setIsForum","msgContent","setMsgContent","msgTitle","setMsgTitle","msgUser","setMsgUser","msgDate","setMsgDate","isLoading","error","sendRequest","clearError","formState","inputHandler","setFormData","content","value","isValid","header","forumMessageSubmitHandler","event","preventDefault","sentMessageResponse","JSON","stringify","questionId","userName","body","inputs","console","log","closeForumEntryHandler","err","openMessageHandler","title","user","date","closeMessageHandler","index","Object","keys","questions","length","messages","values","map","message","bodySplit","split","messageContent","push","messageDate","userIcon","nextButtonHandler","onIndexChange","prevButtonHandler","openForumEntryHandler","forumTabHandler","questionTabHandler","tabContent","tab","idx"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Tab from \"../../shared/components/Navigation/Tabs\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Modal from \"../../shared/components/UIElements/Modal\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport userIcon from \"./user-icon.svg\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { useForm } from \"../../shared/hooks/form-hooks\";\nimport { VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\n\nimport \"./Question.css\";\n\nlet lastQuestionIndex = 0;\nvar messgateContent;\nvar messageTitle;\nconst Question = (props) => {\n  const [loadedQuestions, setloadedQuestions] = useState([]);\n  const [loadedQuestionIndex, setloadedQuestionIndex] = useState(0);\n  const [questionBody, setQuestionBody] = useState(\"\");\n  const [questionName, setQuestionName] = useState(\"\");\n  const [loadedMessages, setLoadedMessages] = useState([]);\n  const [showForumEntry, setShowForumEntry] = useState(false);\n  const [showMessage, setShowMessage] = useState(false);\n  const [isForum, setIsForum] = useState(false);\n  const [msgContent, setMsgContent] = useState(\"\");\n  const [msgTitle, setMsgTitle] = useState(\"\");\n  const [msgUser, setMsgUser] = useState(\"\");\n  const [msgDate, setMsgDate] = useState(\"\");\n\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      content: {\n        value: \"\",\n        isValid: false,\n      },\n      header: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const forumMessageSubmitHandler = async (event) => {\n    event.preventDefault();\n\n    try {\n      const sentMessageResponse = await sendRequest(\n        \"http://51.138.73.135:8080/Algors/sendMessage\",\n        \"POST\",\n        JSON.stringify({\n          questionId: \"1\",\n          userName: \"test14@test.com\",\n          body:\n            formState.inputs.header.value +\n            \"^^\" +\n            formState.inputs.content.value,\n        }),\n        {}\n      );\n\n      console.log(\"sentMessageResponse\");\n      console.log(sentMessageResponse);\n\n      closeForumEntryHandler();\n\n    } catch (err) {}\n  };\n\n  const openMessageHandler = (content, title, user, date) => {\n    setMsgContent(content);\n    setMsgTitle(title);\n    setMsgUser(user);\n    setMsgDate(date);\n    setShowMessage(true);\n  };\n\n  const closeMessageHandler = () => setShowMessage(false);\n\n  useEffect(() => {\n    if (props.index !== null && Object.keys(props.questions).length !== 0) {\n      setloadedQuestionIndex(props.index);\n      setloadedQuestions(props.questions);\n      setQuestionBody(props.questions[props.index].questionBody);\n      setQuestionName(props.questions[props.index].questionName);\n      lastQuestionIndex = Object.keys(props.questions).length;\n    }\n\n    let messages = [];\n    if (Object.keys(props.messages).length !== 0) {\n      Object.values(props.messages).map((message) => {\n        const bodySplit = message.body.split(\"^^\");\n        const messageTitle = bodySplit[0];\n        const messageContent = bodySplit[1];\n\n        messages.push(\n          <Card className=\"forum-message__card\">\n            <button\n              className=\"forum-message__card_button\"\n              onClick={() => {\n                openMessageHandler(\n                  messageContent,\n                  messageTitle,\n                  message.userName,\n                  message.messageDate\n                );\n              }}\n            >\n              <div className=\"forum-message__card__left\">\n                <img className=\"center\" src={userIcon} alt=\"user-icon\" />\n              </div>\n              <div className=\"forum-message__card__right\">\n                <div className=\"forum-message__card__right__top\">\n                  <h2>{messageTitle}</h2>\n                </div>\n                <div className=\"forum-message__card__right__buttom\">\n                  <h4>\n                    {message.userName} posted at {message.messageDate}\n                  </h4>\n                </div>\n              </div>\n            </button>\n          </Card>\n        );\n      });\n      setLoadedMessages(messages);\n      console.log(\"messages:\");\n      console.log(messages);\n    }\n  }, [props]);\n\n  const nextButtonHandler = () => props.onIndexChange(loadedQuestionIndex + 1);\n\n  const prevButtonHandler = () => props.onIndexChange(loadedQuestionIndex - 1);\n\n  const openForumEntryHandler = () => setShowForumEntry(true);\n\n  const closeForumEntryHandler = () => setShowForumEntry(false);\n\n  const forumTabHandler = () => setIsForum(true);\n\n  const questionTabHandler = () => setIsForum(false);\n\n  let tabContent = [\n    {\n      title: \"Question\",\n      content: (\n        <div>\n          <h1>{questionName}</h1>\n          <p>{questionBody}</p>\n        </div>\n      ),\n    },\n    {\n      title: \"Forum\",\n      content: <div className=\"forum-content\">{loadedMessages}</div>,\n    },\n  ];\n\n  if (!props.questions || props.questions.length === 0) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>No questions found.</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <Modal\n        className=\"new-message__modal\"\n        show={showForumEntry}\n        onCancel={closeForumEntryHandler}\n        header=\"Course subjects\" // change this to courses name\n        headerClass=\"new-message__modal-header\"\n        contentClass=\"course-item__modal-content\"\n        footerClass=\"course-item__modal-actions\"\n        footer={\n          <React.Fragment>\n            <Button\n              type=\"submit\"\n              onClick={forumMessageSubmitHandler}\n              disabled={!formState.isValid}\n            >\n              Submit\n            </Button>\n          </React.Fragment>\n        }\n      >\n        <div className=\"new-message__content\">\n          <h2>Forum entry form</h2>\n          <form>\n            <Input\n              element=\"input\"\n              id=\"header\"\n              type=\"text\"\n              placeholder=\"new message header\"\n              onInput={inputHandler}\n              validators={[VALIDATOR_REQUIRE()]}\n            />\n            <div className=\"\">\n              <Input\n                element=\"textarea\"\n                id=\"content\"\n                type=\"textarea\"\n                rows=\"23\"\n                placeholder=\"new message content\"\n                onInput={inputHandler}\n                validators={[VALIDATOR_REQUIRE()]}\n              />\n            </div>\n          </form>\n        </div>\n      </Modal>\n      <Modal\n        className=\"forum-message__modal\"\n        show={showMessage}\n        onCancel={closeMessageHandler}\n        header=\"Forum message\" // change this to courses name\n        headerClass=\"forum-message__modal-header\"\n        contentClass=\"forum-message__modal-content\"\n        footerClass=\"course-item__modal-actions\"\n        footer={\n          <React.Fragment>\n            <Button onClick={closeMessageHandler}>CLOSE</Button>\n          </React.Fragment>\n        }\n      >\n        <div className=\"map-container\">\n          <p>\n            posted by {msgUser} at {msgDate}\n          </p>\n          <h1>{msgTitle}</h1>\n          <h2>{msgContent}</h2>\n        </div>\n      </Modal>\n      <div className=\"question-content\">\n        <div className=\"tabs\">\n          <Tab>\n            {tabContent.map((tab, idx) => (\n              <Tab.TabPane\n                className=\"tab\"\n                key={`Tab-${idx}`}\n                tab={tab.title}\n                onTabSelected={idx === 1 ? forumTabHandler : questionTabHandler}\n                onTab\n              >\n                {tab.content}\n              </Tab.TabPane>\n            ))}\n          </Tab>\n        </div>\n        {isForum && (\n          <div className=\"forum-new\">\n            <Button type=\"button\" onClick={openForumEntryHandler}>\n              New\n            </Button>\n          </div>\n        )}\n        {!isForum && (\n          <div className=\"questions-nav\">\n            <Button\n              type=\"button\"\n              disabled={loadedQuestionIndex === 1}\n              onClick={prevButtonHandler}\n            >\n              Prev\n            </Button>\n            <Button\n              type=\"button\"\n              disabled={loadedQuestionIndex === lastQuestionIndex}\n              onClick={nextButtonHandler}\n            >\n              Next\n            </Button>\n          </div>\n        )}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Question;\n"]},"metadata":{},"sourceType":"module"}