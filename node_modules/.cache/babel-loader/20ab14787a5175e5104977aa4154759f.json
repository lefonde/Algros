{"ast":null,"code":"'use strict';\n\nvar html = require('property-information/html');\n\nvar svg = require('property-information/svg');\n\nvar voids = require('html-void-elements');\n\nvar omission = require('./omission');\n\nvar one = require('./one');\n\nmodule.exports = toHtml;\nvar deprecationWarningIssued;\n\nfunction toHtml(node, options) {\n  var settings = options || {};\n  var quote = settings.quote || '\"';\n  var alternative = quote === '\"' ? \"'\" : '\"';\n\n  if (quote !== '\"' && quote !== \"'\") {\n    throw new Error('Invalid quote `' + quote + '`, expected `\\'` or `\"`');\n  }\n\n  if ('allowDangerousHTML' in settings && !deprecationWarningIssued) {\n    deprecationWarningIssued = true;\n    console.warn('Deprecation warning: `allowDangerousHTML` is a nonstandard option, use `allowDangerousHtml` instead');\n  }\n\n  return one({\n    valid: settings.allowParseErrors ? 0 : 1,\n    safe: settings.allowDangerousCharacters ? 0 : 1,\n    schema: settings.space === 'svg' ? svg : html,\n    omit: settings.omitOptionalTags && omission,\n    quote: quote,\n    alternative: alternative,\n    smart: settings.quoteSmart,\n    unquoted: settings.preferUnquoted,\n    tight: settings.tightAttributes,\n    upperDoctype: settings.upperDoctype,\n    tightDoctype: settings.tightDoctype,\n    bogusComments: settings.bogusComments,\n    tightLists: settings.tightCommaSeparatedLists,\n    tightClose: settings.tightSelfClosing,\n    collapseEmpty: settings.collapseEmptyAttributes,\n    dangerous: settings.allowDangerousHtml || settings.allowDangerousHTML,\n    voids: settings.voids || voids.concat(),\n    entities: settings.entities || {},\n    close: settings.closeSelfClosing,\n    closeEmpty: settings.closeEmptyElements\n  }, node && typeof node === 'object' && 'length' in node ? {\n    type: 'root',\n    children: node\n  } : node);\n}","map":null,"metadata":{},"sourceType":"script"}