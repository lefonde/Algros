{"ast":null,"code":"var _jsxFileName = \"/home/alex/Documents/mta/year 4/final project/Algros/src/problem/components/Answer.js\";\nimport React, { createRef, useEffect, useState } from \"react\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { Dropdown, Selection } from \"react-dropdown-now\";\nimport \"react-dropdown-now/style.css\";\nimport { VALIDATOR_MINLENGTH } from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hooks\";\nimport \"./Answer.css\";\n\nconst Answer = props => {\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [loadedSubmissionResult, setLoadedSubmissionResult] = useState(\" \");\n  const [loadedQuestionIndex, setloadedQuestionIndex] = useState(0);\n  const languageOptions = [{\n    id: \"java\",\n    value: \"java\",\n    label: \"java\"\n  }, {\n    id: \"python3\",\n    value: \"python3\",\n    label: \"python3\"\n  }, {\n    id: \"C\",\n    value: \"C\",\n    label: \"C\"\n  }, {\n    id: \"C#\",\n    value: \"C#\",\n    label: \"C#\"\n  }, {\n    id: \"Go\",\n    value: \"Go\",\n    label: \"Go\"\n  }, {\n    id: \"Ruby\",\n    value: \"Ruby\",\n    label: \"Ruby\"\n  }];\n  useEffect(() => {\n    setloadedQuestionIndex(props.questionIndex);\n  }, [props]);\n  const codeString = \"public class Solution {public static void main(String[] args) {System.out.println(-321);} }\";\n  const [formState, inputHandler, setFormData] = useForm({\n    answer: {\n      value: \"\",\n      isValid: false\n    },\n    result: {\n      value: \"\",\n      isValid: false\n    }\n  }, false);\n\n  const submitQuestion = async () => {\n    try {\n      console.log(loadedQuestionIndex);\n      const answerSubmissionResponse = await sendRequest(\"http://51.138.73.135:8080/Algors/submit\", \"POST\", JSON.stringify({\n        answer: codeString,\n        language: \"java\",\n        version: \"0\",\n        courseId: \"1\",\n        userId: \"50\",\n        questionId: loadedQuestionIndex.toString()\n      }), {});\n      console.log(answerSubmissionResponse);\n      let submitResultString = `output:${answerSubmissionResponse.output}, memory:${answerSubmissionResponse.memory}, cpu time:${answerSubmissionResponse.cpuTime}`;\n      console.log(\"answerSubmissionResponse=\");\n      console.log(submitResultString);\n      let test_SubmissionResults = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }, answerSubmissionResponse.error ? /*#__PURE__*/React.createElement(\"h3\", {\n        style: {\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }\n      }, answerSubmissionResponse.error) : /*#__PURE__*/React.createElement(\"h3\", {\n        style: {\n          color: \"green\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }\n      }, \"Passed\"), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, `output: ${answerSubmissionResponse.output}`), !answerSubmissionResponse.error && /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      }, `memory:${answerSubmissionResponse.memory},  cpu time:${answerSubmissionResponse.cpuTime}`));\n      setLoadedSubmissionResult(test_SubmissionResults);\n    } catch (err) {}\n\n    console.log(loadedSubmissionResult);\n  };\n\n  const authSubmitHandler = event => {\n    event.preventDefault();\n    submitQuestion();\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"answer-pane\",\n    onSubmit: authSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"codearea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"answer\",\n    element: \"codearea\",\n    validators: [VALIDATOR_MINLENGTH(3)],\n    errorText: \"Please enter a valid code answer\",\n    placeholder: \"test placeholder\",\n    onInput: inputHandler,\n    initialValue: codeString,\n    language: \"js\",\n    value: codeString,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answer-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }), isLoading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Dropdown, {\n    placeholder: \"Select an option\",\n    className: \"language-selector\",\n    options: languageOptions,\n    value: \"one\",\n    onChange: value => console.log(\"change!\", value),\n    onSelect: value => console.log(\"selected!\", value) // always fires once a selection happens even if there is no change\n    ,\n    onClose: closedBySelection => console.log(\"closedBySelection?:\", closedBySelection),\n    onOpen: () => console.log(\"open!\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"item-relative\",\n    type: \"submit\",\n    disabled: formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, \"Submit\"), !isLoading && /*#__PURE__*/React.createElement(\"label\", {\n    id: \"result\",\n    for: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, loadedSubmissionResult)));\n};\n\nexport default Answer;","map":{"version":3,"sources":["/home/alex/Documents/mta/year 4/final project/Algros/src/problem/components/Answer.js"],"names":["React","createRef","useEffect","useState","Input","Button","useHttpClient","ErrorModal","LoadingSpinner","Dropdown","Selection","VALIDATOR_MINLENGTH","useForm","Answer","props","isLoading","error","sendRequest","clearError","loadedSubmissionResult","setLoadedSubmissionResult","loadedQuestionIndex","setloadedQuestionIndex","languageOptions","id","value","label","questionIndex","codeString","formState","inputHandler","setFormData","answer","isValid","result","submitQuestion","console","log","answerSubmissionResponse","JSON","stringify","language","version","courseId","userId","questionId","toString","submitResultString","output","memory","cpuTime","test_SubmissionResults","color","err","authSubmitHandler","event","preventDefault","closedBySelection"],"mappings":"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","sourcesContent":["import React, { createRef, useEffect, useState } from \"react\";\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { Dropdown, Selection } from \"react-dropdown-now\";\nimport \"react-dropdown-now/style.css\";\nimport { VALIDATOR_MINLENGTH } from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hooks\";\n\nimport \"./Answer.css\";\n\nconst Answer = (props) => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedSubmissionResult, setLoadedSubmissionResult] = useState(\" \");\n  const [loadedQuestionIndex, setloadedQuestionIndex] = useState(0);\n\n  const languageOptions = [\n    { id: \"java\", value: \"java\", label: \"java\" },\n    { id: \"python3\", value: \"python3\", label: \"python3\" },\n    { id: \"C\", value: \"C\", label: \"C\" },\n    { id: \"C#\", value: \"C#\", label: \"C#\" },\n    { id: \"Go\", value: \"Go\", label: \"Go\" },\n    { id: \"Ruby\", value: \"Ruby\", label: \"Ruby\" },\n\n  ];\n\n  useEffect(() => {\n    setloadedQuestionIndex(props.questionIndex);\n  }, [props]);\n\n  const codeString =\n    \"public class Solution {public static void main(String[] args) {System.out.println(-321);} }\";\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      answer: {\n        value: \"\",\n        isValid: false,\n      },\n      result: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const submitQuestion = async () => {\n    try {\n      console.log(loadedQuestionIndex);\n      const answerSubmissionResponse = await sendRequest(\n        \"http://51.138.73.135:8080/Algors/submit\",\n        \"POST\",\n        JSON.stringify({\n          answer: codeString,\n          language: \"java\",\n          version: \"0\",\n          courseId: \"1\",\n          userId: \"50\",\n          questionId: loadedQuestionIndex.toString(),\n        }),\n        {}\n      );\n      console.log(answerSubmissionResponse);\n\n      let submitResultString = `output:${answerSubmissionResponse.output}, memory:${answerSubmissionResponse.memory}, cpu time:${answerSubmissionResponse.cpuTime}`;\n      console.log(\"answerSubmissionResponse=\");\n      console.log(submitResultString);\n\n      let test_SubmissionResults = (\n        <div>\n          {answerSubmissionResponse.error ? (\n            <h3 style={{ color: \"red\" }}>{answerSubmissionResponse.error}</h3>\n          ) : (\n            <h3 style={{ color: \"green\" }}>Passed</h3>\n          )}\n          <h3>{`output: ${answerSubmissionResponse.output}`}</h3>\n          {!answerSubmissionResponse.error && (\n            <h4>{`memory:${answerSubmissionResponse.memory},  cpu time:${answerSubmissionResponse.cpuTime}`}</h4>\n          )}\n        </div>\n      );\n\n      setLoadedSubmissionResult(test_SubmissionResults);\n    } catch (err) {}\n    console.log(loadedSubmissionResult);\n  };\n\n  const authSubmitHandler = (event) => {\n    event.preventDefault();\n    submitQuestion();\n  };\n\n  return (\n    <form className=\"answer-pane\" onSubmit={authSubmitHandler}>\n      <div className=\"codearea\">\n        <Input\n          id=\"answer\"\n          element=\"codearea\"\n          validators={[VALIDATOR_MINLENGTH(3)]}\n          errorText=\"Please enter a valid code answer\"\n          placeholder=\"test placeholder\"\n          onInput={inputHandler}\n          initialValue={codeString}\n          language=\"js\"\n          value={codeString}\n        />\n      </div>\n      <div className=\"answer-footer\">\n        <ErrorModal error={error} onClear={clearError} />\n        {isLoading && (\n          <div className=\"center\">\n            <LoadingSpinner />\n          </div>\n        )}\n        <Dropdown\n          placeholder=\"Select an option\"\n          className=\"language-selector\"\n          options={languageOptions}\n          value=\"one\"\n          onChange={(value) => console.log(\"change!\", value)}\n          onSelect={(value) => console.log(\"selected!\", value)} // always fires once a selection happens even if there is no change\n          onClose={(closedBySelection) =>\n            console.log(\"closedBySelection?:\", closedBySelection)\n          }\n          onOpen={() => console.log(\"open!\")}\n        />\n        <Button\n          className=\"item-relative\"\n          type=\"submit\"\n          disabled={formState.isValid}\n        >\n          Submit\n        </Button>\n        {!isLoading && (\n          <label id=\"result\" for=\"submit\">\n            {loadedSubmissionResult}\n          </label>\n        )}\n      </div>\n    </form>\n  );\n};\n\nexport default Answer;\n"]},"metadata":{},"sourceType":"module"}