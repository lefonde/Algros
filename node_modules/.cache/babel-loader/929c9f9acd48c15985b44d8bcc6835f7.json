{"ast":null,"code":"var _jsxFileName = \"/home/alex/Documents/mta/year 4/final project/Algros/src/problem/components/Answer.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { Dropdown, Selection } from \"react-dropdown-now\";\nimport \"react-dropdown-now/style.css\";\nimport { VALIDATOR_MINLENGTH } from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hooks\";\nimport \"./Answer.css\";\n\nconst Answer = props => {\n  const courseId = useParams().courseId.toString();\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [loadedSubmissionResult, setLoadedSubmissionResult] = useState(\" \");\n  const [loadedQuestionIndex, setloadedQuestionIndex] = useState(0);\n  const [languageTemplate, setLanguageTemplate] = useState(\"\");\n  const [selectedLanguage, setSelectedLanguage] = useState(\"java\");\n  const javaTemplate = \"public class Solution {public static void main(String[] args) {System.out.println(-321);} }\";\n  const python3Template = 'using System;class Program{ static void Main() { int x = 10; int y = 25; int z = x + y; Console.Write(\"Sum of x + y = \"+ z); }}';\n  const languageOptions = [{\n    id: \"java\",\n    value: \"java\",\n    label: \"java\"\n  }, {\n    id: \"python3\",\n    value: \"python3\",\n    label: \"python3\"\n  }];\n  const languageTemplates = [{\n    id: \"C#\",\n    code: 'using System;class Program{ static void Main() { int x = 10; int y = 25; int z = x + y; Console.Write(\"Sum of x + y = \"+ z); }}'\n  }, {\n    id: \"java\",\n    code: \"public class Solution {public static void main(String[] args) {System.out.println(-321);} }\"\n  }];\n  useEffect(() => {\n    setloadedQuestionIndex(props.questionIndex);\n  }, [props]);\n  const codeString = \"public class Solution {public static void main(String[] args) {System.out.println(-321);} }\";\n  const [formState, inputHandler, setFormData] = useForm({\n    answer: {\n      value: \"\",\n      isValid: false\n    },\n    result: {\n      value: \"\",\n      isValid: false\n    }\n  }, false);\n\n  const submitQuestion = async () => {\n    try {\n      console.log(\"answer string to send=\");\n      console.log(document.getElementById(\"answer\").value.replace(/(\\r\\n|\\n|\\r)/gm, \"\"));\n      const userId = JSON.parse(localStorage.getItem(\"userData\")).userId.toString();\n      const answerSubmissionResponse = await sendRequest(\"http://51.138.73.135:8080/Algors/submit\", \"POST\", JSON.stringify({\n        answer: document.getElementById(\"answer\").value,\n        language: \"java\",\n        version: \"0\",\n        courseId: courseId,\n        userId: userId,\n        questionId: loadedQuestionIndex.toString()\n      }), {});\n      console.log(answerSubmissionResponse);\n      let submitResultString = `output:${answerSubmissionResponse.output}, memory:${answerSubmissionResponse.memory}, cpu time:${answerSubmissionResponse.cpuTime}`;\n      console.log(\"answerSubmissionResponse=\");\n      console.log(submitResultString);\n      let test_SubmissionResults = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }, answerSubmissionResponse.error ? /*#__PURE__*/React.createElement(\"h3\", {\n        style: {\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }\n      }, answerSubmissionResponse.error) : /*#__PURE__*/React.createElement(\"h3\", {\n        style: {\n          color: \"green\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }\n      }, \"Passed\"), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }\n      }, `output: ${answerSubmissionResponse.output}`), !answerSubmissionResponse.error && /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }\n      }, `memory:${answerSubmissionResponse.memory},  cpu time:${answerSubmissionResponse.cpuTime}`));\n      setLoadedSubmissionResult(test_SubmissionResults);\n    } catch (err) {}\n\n    console.log(loadedSubmissionResult);\n  };\n\n  const authSubmitHandler = event => {\n    event.preventDefault();\n    submitQuestion();\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"answer-pane\",\n    onSubmit: authSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"codearea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, selectedLanguage === \"java\" && /*#__PURE__*/React.createElement(Input, {\n    id: \"answer\",\n    type: \"text\",\n    element: \"codearea\",\n    validators: [VALIDATOR_MINLENGTH(3)],\n    errorText: \"Please enter a valid code answer\",\n    placeholder: \"test placeholder\",\n    onInput: inputHandler,\n    language: \"js\",\n    initialValue: javaTemplate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }), selectedLanguage === \"python3\" && /*#__PURE__*/React.createElement(Input, {\n    id: \"answer\",\n    type: \"text\",\n    element: \"codearea\",\n    validators: [VALIDATOR_MINLENGTH(3)],\n    errorText: \"Please enter a valid code answer\",\n    placeholder: \"test placeholder\",\n    onInput: inputHandler,\n    language: \"js\",\n    initialValue: python3Template,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answer-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }), isLoading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Dropdown, {\n    id: \"languages-dropdown\",\n    placeholder: \"Select an option\",\n    className: \"language-selector\",\n    options: languageOptions,\n    value: \"java\",\n    onChange: value => console.log(\"change!\", value),\n    onSelect: value => {// const input = document.getElementById(\"answer\");\n      // input.value = languageTemplates.find(\n      //   (entry) => entry.id === value.value\n      // )\n      //   ? languageTemplates.find((entry) => entry.id === value.value).code\n      //   : \"no template\";\n      // const event = new Event(\"text\", { bubbles: true });\n      // input.dispatchEvent(event);\n    },\n    onClose: closedBySelection => console.log(\"closedBySelection?:\", closedBySelection),\n    onOpen: () => console.log(\"open!\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"item-relative\",\n    type: \"submit\",\n    disabled: formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, \"Submit\"), !isLoading && /*#__PURE__*/React.createElement(\"label\", {\n    id: \"result\",\n    for: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }, loadedSubmissionResult)));\n};\n\nexport default Answer;","map":{"version":3,"sources":["/home/alex/Documents/mta/year 4/final project/Algros/src/problem/components/Answer.js"],"names":["React","useEffect","useState","useParams","Input","Button","useHttpClient","ErrorModal","LoadingSpinner","Dropdown","Selection","VALIDATOR_MINLENGTH","useForm","Answer","props","courseId","toString","isLoading","error","sendRequest","clearError","loadedSubmissionResult","setLoadedSubmissionResult","loadedQuestionIndex","setloadedQuestionIndex","languageTemplate","setLanguageTemplate","selectedLanguage","setSelectedLanguage","javaTemplate","python3Template","languageOptions","id","value","label","languageTemplates","code","questionIndex","codeString","formState","inputHandler","setFormData","answer","isValid","result","submitQuestion","console","log","document","getElementById","replace","userId","JSON","parse","localStorage","getItem","answerSubmissionResponse","stringify","language","version","questionId","submitResultString","output","memory","cpuTime","test_SubmissionResults","color","err","authSubmitHandler","event","preventDefault","closedBySelection"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { Dropdown, Selection } from \"react-dropdown-now\";\nimport \"react-dropdown-now/style.css\";\nimport { VALIDATOR_MINLENGTH } from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hooks\";\n\nimport \"./Answer.css\";\n\nconst Answer = (props) => {\n  const courseId = useParams().courseId.toString();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedSubmissionResult, setLoadedSubmissionResult] = useState(\" \");\n  const [loadedQuestionIndex, setloadedQuestionIndex] = useState(0);\n  const [languageTemplate, setLanguageTemplate] = useState(\"\");\n  const [selectedLanguage, setSelectedLanguage] = useState(\"java\");\n\n  const javaTemplate =\n    \"public class Solution {public static void main(String[] args) {System.out.println(-321);} }\";\n  const python3Template =\n    'using System;class Program{ static void Main() { int x = 10; int y = 25; int z = x + y; Console.Write(\"Sum of x + y = \"+ z); }}';\n\n  const languageOptions = [\n    { id: \"java\", value: \"java\", label: \"java\" },\n    { id: \"python3\", value: \"python3\", label: \"python3\" },\n  ];\n\n  const languageTemplates = [\n    {\n      id: \"C#\",\n      code: 'using System;class Program{ static void Main() { int x = 10; int y = 25; int z = x + y; Console.Write(\"Sum of x + y = \"+ z); }}',\n    },\n    {\n      id: \"java\",\n      code: \"public class Solution {public static void main(String[] args) {System.out.println(-321);} }\",\n    },\n  ];\n\n  useEffect(() => {\n    setloadedQuestionIndex(props.questionIndex);\n  }, [props]);\n\n  const codeString =\n    \"public class Solution {public static void main(String[] args) {System.out.println(-321);} }\";\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      answer: {\n        value: \"\",\n        isValid: false,\n      },\n      result: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const submitQuestion = async () => {\n    try {\n      console.log(\"answer string to send=\");\n      console.log(\n        document.getElementById(\"answer\").value.replace(/(\\r\\n|\\n|\\r)/gm, \"\")\n      );\n      const userId = JSON.parse(\n        localStorage.getItem(\"userData\")\n      ).userId.toString();\n      const answerSubmissionResponse = await sendRequest(\n        \"http://51.138.73.135:8080/Algors/submit\",\n        \"POST\",\n        JSON.stringify({\n          answer: document.getElementById(\"answer\").value,\n          language: \"java\",\n          version: \"0\",\n          courseId: courseId,\n          userId: userId,\n          questionId: loadedQuestionIndex.toString(),\n        }),\n        {}\n      );\n      console.log(answerSubmissionResponse);\n\n      let submitResultString = `output:${answerSubmissionResponse.output}, memory:${answerSubmissionResponse.memory}, cpu time:${answerSubmissionResponse.cpuTime}`;\n      console.log(\"answerSubmissionResponse=\");\n      console.log(submitResultString);\n\n      let test_SubmissionResults = (\n        <div>\n          {answerSubmissionResponse.error ? (\n            <h3 style={{ color: \"red\" }}>{answerSubmissionResponse.error}</h3>\n          ) : (\n            <h3 style={{ color: \"green\" }}>Passed</h3>\n          )}\n          <h3>{`output: ${answerSubmissionResponse.output}`}</h3>\n          {!answerSubmissionResponse.error && (\n            <h4>{`memory:${answerSubmissionResponse.memory},  cpu time:${answerSubmissionResponse.cpuTime}`}</h4>\n          )}\n        </div>\n      );\n\n      setLoadedSubmissionResult(test_SubmissionResults);\n    } catch (err) {}\n    console.log(loadedSubmissionResult);\n  };\n\n  const authSubmitHandler = (event) => {\n    event.preventDefault();\n    submitQuestion();\n  };\n\n  return (\n    <form className=\"answer-pane\" onSubmit={authSubmitHandler}>\n      <div className=\"codearea\">\n        {selectedLanguage === \"java\" && (\n          <Input\n            id=\"answer\"\n            type=\"text\"\n            element=\"codearea\"\n            validators={[VALIDATOR_MINLENGTH(3)]}\n            errorText=\"Please enter a valid code answer\"\n            placeholder=\"test placeholder\"\n            onInput={inputHandler}\n            language=\"js\"\n            initialValue={javaTemplate}\n          />\n        )}\n        {selectedLanguage === \"python3\" && (\n          <Input\n            id=\"answer\"\n            type=\"text\"\n            element=\"codearea\"\n            validators={[VALIDATOR_MINLENGTH(3)]}\n            errorText=\"Please enter a valid code answer\"\n            placeholder=\"test placeholder\"\n            onInput={inputHandler}\n            language=\"js\"\n            initialValue={python3Template}\n          />\n        )}\n      </div>\n      <div className=\"answer-footer\">\n        <ErrorModal error={error} onClear={clearError} />\n        {isLoading && (\n          <div className=\"center\">\n            <LoadingSpinner />\n          </div>\n        )}\n        <Dropdown\n          id=\"languages-dropdown\"\n          placeholder=\"Select an option\"\n          className=\"language-selector\"\n          options={languageOptions}\n          value=\"java\"\n          onChange={(value) => console.log(\"change!\", value)}\n          onSelect={(value) => {\n            // const input = document.getElementById(\"answer\");\n            // input.value = languageTemplates.find(\n            //   (entry) => entry.id === value.value\n            // )\n            //   ? languageTemplates.find((entry) => entry.id === value.value).code\n            //   : \"no template\";\n            // const event = new Event(\"text\", { bubbles: true });\n            // input.dispatchEvent(event);\n          }}\n          onClose={(closedBySelection) =>\n            console.log(\"closedBySelection?:\", closedBySelection)\n          }\n          onOpen={() => console.log(\"open!\")}\n        />\n        <Button\n          className=\"item-relative\"\n          type=\"submit\"\n          disabled={formState.isValid}\n        >\n          Submit\n        </Button>\n        {!isLoading && (\n          <label id=\"result\" for=\"submit\">\n            {loadedSubmissionResult}\n          </label>\n        )}\n      </div>\n    </form>\n  );\n};\n\nexport default Answer;\n"]},"metadata":{},"sourceType":"module"}