{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saris\\\\Documents\\\\Alex\\\\final project BAK 2\\\\src\\\\problem\\\\components\\\\Question.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Tab from \"../../shared/components/Navigation/Tabs\";\nimport Button from \"../../shared/components/FormElements/Button\";\n\nconst Question = props => {\n  const [loadedQuestions, setloadedQuestions] = useState([]);\n  const [loadedQuestionIndex, setloadedQuestionIndex] = useState(0);\n  const [questionBody, setQuestionBody] = useState(\"\");\n  const [questionName, setQuestionName] = useState(\"\");\n  const [loadedTabContent, setloadedTabContent] = useState([]);\n  const lastQuestionIndex = 0;\n  let messages = [];\n\n  if (props.questions.length !== 0 && props.index && props.messages.length !== 0) {\n    messages = props.messages;\n  }\n\n  useEffect(() => {\n    if (props.index && props.questions.length !== 0) {\n      console.log(\"props.index=\");\n      console.log(props.index);\n      console.log(\"props.questions=\");\n      console.log(props.questions);\n      setloadedQuestionIndex(props.index);\n      setloadedQuestions(props.questions);\n      setQuestionBody(props.questions[props.index].questionBody);\n      setQuestionName(props.questions[props.index].questionName);\n      lastQuestionIndex = props.questions.length;\n    }\n  }, [props]);\n\n  const nextButtonHandler = () => {\n    setloadedQuestionIndex(curIndex => curIndex + 1);\n    console.log(loadedQuestionIndex);\n  };\n\n  const prevButtonHandler = () => {\n    setloadedQuestionIndex(curIndex => curIndex - 1);\n    console.log(loadedQuestionIndex);\n  };\n\n  let tabContent = [{\n    title: \"Question\",\n    content: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, questionName), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, questionBody))\n  }, {\n    title: \"Forum\",\n    content: \"messages\"\n  }];\n\n  if (!props.questions || props.questions.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, \"No questions found.\")));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, tabContent.map((tab, idx) => /*#__PURE__*/React.createElement(Tab.TabPane, {\n    key: `Tab-${idx}`,\n    tab: tab.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, tab.content)))))), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    disabled: loadedQuestionIndex === 1,\n    onClick: prevButtonHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, \"Prev\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    disabled: loadedQuestionIndex === lastQuestionIndex,\n    onClick: nextButtonHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, \"Next\"));\n};\n\nexport default Question;","map":{"version":3,"sources":["C:/Users/saris/Documents/Alex/final project BAK 2/src/problem/components/Question.js"],"names":["React","useEffect","useState","Card","Tab","Button","Question","props","loadedQuestions","setloadedQuestions","loadedQuestionIndex","setloadedQuestionIndex","questionBody","setQuestionBody","questionName","setQuestionName","loadedTabContent","setloadedTabContent","lastQuestionIndex","messages","questions","length","index","console","log","nextButtonHandler","curIndex","prevButtonHandler","tabContent","title","content","map","tab","idx"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,IAAP,MAAiB,yCAAjB;AACA,OAAOC,GAAP,MAAgB,yCAAhB;AACA,OAAOC,MAAP,MAAmB,6CAAnB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACQ,mBAAD,EAAsBC,sBAAtB,IAAgDT,QAAQ,CAAC,CAAD,CAA9D;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACc,gBAAD,EAAmBC,mBAAnB,IAA0Cf,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAMgB,iBAAiB,GAAG,CAA1B;AAEA,MAAIC,QAAQ,GAAG,EAAf;;AACA,MACEZ,KAAK,CAACa,SAAN,CAAgBC,MAAhB,KAA2B,CAA3B,IACAd,KAAK,CAACe,KADN,IAEAf,KAAK,CAACY,QAAN,CAAeE,MAAf,KAA0B,CAH5B,EAIE;AAEAF,IAAAA,QAAQ,GAAGZ,KAAK,CAACY,QAAjB;AACD;;AAEDlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGM,KAAK,CAACe,KAAN,IAAef,KAAK,CAACa,SAAN,CAAgBC,MAAhB,KAA2B,CAA7C,EAAgD;AAC9CE,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAK,CAACe,KAAlB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAK,CAACa,SAAlB;AACAT,MAAAA,sBAAsB,CAACJ,KAAK,CAACe,KAAP,CAAtB;AACAb,MAAAA,kBAAkB,CAACF,KAAK,CAACa,SAAP,CAAlB;AACAP,MAAAA,eAAe,CAACN,KAAK,CAACa,SAAN,CAAgBb,KAAK,CAACe,KAAtB,EAA6BV,YAA9B,CAAf;AACAG,MAAAA,eAAe,CAACR,KAAK,CAACa,SAAN,CAAgBb,KAAK,CAACe,KAAtB,EAA6BR,YAA9B,CAAf;AACAI,MAAAA,iBAAiB,GAAGX,KAAK,CAACa,SAAN,CAAgBC,MAApC;AACD;AACF,GAZQ,EAYN,CAACd,KAAD,CAZM,CAAT;;AAcA,QAAMkB,iBAAiB,GAAG,MAAM;AAC9Bd,IAAAA,sBAAsB,CAACe,QAAQ,IAAIA,QAAQ,GAAG,CAAxB,CAAtB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYd,mBAAZ;AACD,GAHD;;AAKA,QAAMiB,iBAAiB,GAAG,MAAM;AAC9BhB,IAAAA,sBAAsB,CAACe,QAAQ,IAAIA,QAAQ,GAAC,CAAtB,CAAtB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYd,mBAAZ;AACD,GAHD;;AAKA,MAAIkB,UAAU,GAAG,CACf;AACEC,IAAAA,KAAK,EAAE,UADT;AAEEC,IAAAA,OAAO,eACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKhB,YAAL,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIF,YAAJ,CAFF;AAHJ,GADe,EAUf;AACEiB,IAAAA,KAAK,EAAE,OADT;AAEEC,IAAAA,OAAO,EAAE;AAFX,GAVe,CAAjB;;AAgBA,MAAI,CAACvB,KAAK,CAACa,SAAP,IAAoBb,KAAK,CAACa,SAAN,CAAgBC,MAAhB,KAA2B,CAAnD,EAAsD;AACpD,wBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,CADF,CADF;AAOD;;AAED,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGO,UAAU,CAACG,GAAX,CAAe,CAACC,GAAD,EAAMC,GAAN,kBACd,oBAAC,GAAD,CAAK,OAAL;AAAa,IAAA,GAAG,EAAG,OAAMA,GAAI,EAA7B;AAAgC,IAAA,GAAG,EAAED,GAAG,CAACH,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,GAAG,CAACF,OADP,CADD,CADH,CADF,CADF,CADF,CADF,eAcE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAEpB,mBAAmB,KAAK,CAAxD;AAA2D,IAAA,OAAO,EAAEiB,iBAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF,eAeE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAEjB,mBAAmB,KAAKQ,iBAAxD;AAA2E,IAAA,OAAO,EAAEO,iBAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,CADF;AAmBD,CAvFD;;AAyFA,eAAenB,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Tab from \"../../shared/components/Navigation/Tabs\";\nimport Button from \"../../shared/components/FormElements/Button\";\n\nconst Question = (props) => {\n  const [loadedQuestions, setloadedQuestions] = useState([]);\n  const [loadedQuestionIndex, setloadedQuestionIndex] = useState(0);\n  const [questionBody, setQuestionBody] = useState(\"\");\n  const [questionName, setQuestionName] = useState(\"\");\n  const [loadedTabContent, setloadedTabContent] = useState([]);\n  const lastQuestionIndex = 0;\n\n  let messages = [];\n  if (\n    props.questions.length !== 0 &&\n    props.index &&\n    props.messages.length !== 0\n  ) {\n    \n    messages = props.messages;\n  }\n\n  useEffect(() => {\n    if(props.index && props.questions.length !== 0) {\n      console.log(\"props.index=\")\n      console.log(props.index)\n      console.log(\"props.questions=\")\n      console.log(props.questions)\n      setloadedQuestionIndex(props.index);\n      setloadedQuestions(props.questions)\n      setQuestionBody(props.questions[props.index].questionBody)\n      setQuestionName(props.questions[props.index].questionName)\n      lastQuestionIndex = props.questions.length;\n    }\n  }, [props]);\n\n  const nextButtonHandler = () => {\n    setloadedQuestionIndex(curIndex => curIndex + 1);\n    console.log(loadedQuestionIndex);\n  }\n\n  const prevButtonHandler = () => {\n    setloadedQuestionIndex(curIndex => curIndex-1);\n    console.log(loadedQuestionIndex);\n  }\n\n  let tabContent = [\n    {\n      title: \"Question\",\n      content: (\n        <div>\n          <h1>{questionName}</h1>\n          <p>{questionBody}</p>\n        </div>\n      ),\n    },\n    {\n      title: \"Forum\",\n      content: \"messages\",\n    },\n  ];\n\n  if (!props.questions || props.questions.length === 0) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>No questions found.</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"row\">\n        <div className=\"col text-center\">\n          <div className=\"row text-left\">\n            <Tab>\n              {tabContent.map((tab, idx) => (\n                <Tab.TabPane key={`Tab-${idx}`} tab={tab.title}>\n                  {tab.content}\n                </Tab.TabPane>\n              ))}\n            </Tab>\n          </div>\n        </div>\n      </div>\n      <Button type=\"button\" disabled={loadedQuestionIndex === 1} onClick={prevButtonHandler}>Prev</Button>\n      <Button type=\"button\" disabled={loadedQuestionIndex === lastQuestionIndex} onClick={nextButtonHandler}>Next</Button>\n    </React.Fragment>\n  );\n};\n\nexport default Question;\n"]},"metadata":{},"sourceType":"module"}