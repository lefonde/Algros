{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saris\\\\Documents\\\\Alex\\\\final project BAK 2\\\\src\\\\problem\\\\components\\\\Question.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Tab from \"../../shared/components/Navigation/Tabs\";\n\nconst Question = props => {\n  const [loadedQuestions, setloadedQuestions] = useState([]);\n  const [loadedQuestionIndex, setloadedQuestionIndex] = useState();\n  const [loadedTabContent, setloadedTabContent] = useState([]); //   useEffect(() => {\n  //     setloadedQuestions(props.questions);\n  //     setloadedQuestionIndex(props.index);\n  //     setloadedTabContent([\n  //       {\n  //         title: \"Question\",\n  //         content: (\n  //           <div>\n  //             <h1>{props.questions[props.index].questionName}</h1>\n  //             <p>{props.questions[props.index].questionBody}</p>\n  //           </div>\n  //         ),\n  //       },\n  //       {\n  //         title: \"Forum\",\n  //         content: \"I've made you more content\",\n  //       },\n  //     ]);\n  //   }, []);\n\n  const tabContent = [{\n    title: \"Question\",\n    content: props.blabla\n  }, {\n    title: \"Forum\",\n    content: \"I've made you more content\"\n  }];\n\n  if (!props.questions || props.questions.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, \"No questions found.\")));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, loadedTabContent.map((tab, idx) => /*#__PURE__*/React.createElement(Tab.TabPane, {\n    key: `Tab-${idx}`,\n    tab: tab.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, tab.content)))))), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, props.questions[props.index].questionName), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, props.questions[props.index].questionBody));\n};\n\nexport default Question;","map":{"version":3,"sources":["C:/Users/saris/Documents/Alex/final project BAK 2/src/problem/components/Question.js"],"names":["React","useEffect","useState","Card","Tab","Question","props","loadedQuestions","setloadedQuestions","loadedQuestionIndex","setloadedQuestionIndex","loadedTabContent","setloadedTabContent","tabContent","title","content","blabla","questions","length","map","tab","idx","index","questionName","questionBody"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,IAAP,MAAiB,yCAAjB;AACA,OAAOC,GAAP,MAAgB,yCAAhB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCN,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACO,mBAAD,EAAsBC,sBAAtB,IAAgDR,QAAQ,EAA9D;AACA,QAAM,CAACS,gBAAD,EAAmBC,mBAAnB,IAA0CV,QAAQ,CAAC,EAAD,CAAxD,CAH0B,CAK5B;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI,QAAMW,UAAU,GAAG,CACjB;AACEC,IAAAA,KAAK,EAAE,UADT;AAEEC,IAAAA,OAAO,EAAGT,KAAK,CAACU;AAFlB,GADiB,EAKjB;AACEF,IAAAA,KAAK,EAAE,OADT;AAEEC,IAAAA,OAAO,EAAE;AAFX,GALiB,CAAnB;;AAWF,MAAI,CAACT,KAAK,CAACW,SAAP,IAAoBX,KAAK,CAACW,SAAN,CAAgBC,MAAhB,KAA2B,CAAnD,EAAsD;AACpD,wBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,CADF,CADF;AAOD;;AAED,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,gBAAgB,CAACQ,GAAjB,CAAqB,CAACC,GAAD,EAAMC,GAAN,kBACpB,oBAAC,GAAD,CAAK,OAAL;AAAa,IAAA,GAAG,EAAG,OAAMA,GAAI,EAA7B;AAAgC,IAAA,GAAG,EAAED,GAAG,CAACN,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,GAAG,CAACL,OADP,CADD,CADH,CADF,CADF,CADF,CADF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKT,KAAK,CAACW,SAAN,CAAgBX,KAAK,CAACgB,KAAtB,EAA6BC,YAAlC,CAdF,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIjB,KAAK,CAACW,SAAN,CAAgBX,KAAK,CAACgB,KAAtB,EAA6BE,YAAjC,CAfF,CADF;AAmBD,CAlED;;AAoEA,eAAenB,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Tab from \"../../shared/components/Navigation/Tabs\";\n\nconst Question = (props) => {\n  const [loadedQuestions, setloadedQuestions] = useState([]);\n  const [loadedQuestionIndex, setloadedQuestionIndex] = useState();\n  const [loadedTabContent, setloadedTabContent] = useState([]);\n\n//   useEffect(() => {\n//     setloadedQuestions(props.questions);\n//     setloadedQuestionIndex(props.index);\n\n//     setloadedTabContent([\n//       {\n//         title: \"Question\",\n//         content: (\n//           <div>\n//             <h1>{props.questions[props.index].questionName}</h1>\n//             <p>{props.questions[props.index].questionBody}</p>\n//           </div>\n//         ),\n//       },\n//       {\n//         title: \"Forum\",\n//         content: \"I've made you more content\",\n//       },\n//     ]);\n//   }, []);\n\n    const tabContent = [\n      {\n        title: \"Question\",\n        content:  props.blabla,\n      },\n      {\n        title: \"Forum\",\n        content: \"I've made you more content\",\n      },\n    ];\n\n  if (!props.questions || props.questions.length === 0) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>No questions found.</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"row\">\n        <div className=\"col text-center\">\n          <div className=\"row text-left\">\n            <Tab>\n              {loadedTabContent.map((tab, idx) => (\n                <Tab.TabPane key={`Tab-${idx}`} tab={tab.title}>\n                  {tab.content}\n                </Tab.TabPane>\n              ))}\n            </Tab>\n          </div>\n        </div>\n      </div>\n      <h1>{props.questions[props.index].questionName}</h1>\n      <p>{props.questions[props.index].questionBody}</p>\n    </React.Fragment>\n  );\n};\n\nexport default Question;\n"]},"metadata":{},"sourceType":"module"}