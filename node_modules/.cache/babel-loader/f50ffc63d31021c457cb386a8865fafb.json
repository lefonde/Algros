{"ast":null,"code":"var _jsxFileName = \"/home/alex/Documents/mta/year 4/final project/Algros/src/problem/components/Question.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Tab from \"../../shared/components/Navigation/Tabs\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Modal from \"../../shared/components/UIElements/Modal\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport userIcon from \"./user-icon.svg\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { useForm } from \"../../shared/hooks/form-hooks\";\nimport { VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\nimport \"./Question.css\";\nlet lastQuestionIndex = 0;\n\nconst Question = props => {\n  const [loadedQuestionIndex, setloadedQuestionIndex] = useState(0);\n  const [questionBody, setQuestionBody] = useState(\"\");\n  const [questionName, setQuestionName] = useState(\"\");\n  const [loadedMessages, setLoadedMessages] = useState([]);\n  const [showForumEntry, setShowForumEntry] = useState(false);\n  const [showMessage, setShowMessage] = useState(false);\n  const [isForum, setIsForum] = useState(false);\n  const [msgContent, setMsgContent] = useState(\"\");\n  const [msgTitle, setMsgTitle] = useState(\"\");\n  const [msgUser, setMsgUser] = useState(\"\");\n  const [msgDate, setMsgDate] = useState(\"\");\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [formState, inputHandler, setFormData] = useForm({\n    content: {\n      value: \"\",\n      isValid: false\n    },\n    header: {\n      value: \"\",\n      isValid: false\n    }\n  }, false);\n\n  const forumMessageSubmitHandler = async event => {\n    event.preventDefault();\n    const userName = JSON.parse(localStorage.getItem(\"userData\")).userName.toString();\n\n    try {\n      const sentMessageResponse = await sendRequest(\"http://51.138.73.135:8080/Algors/sendMessage\", \"POST\", JSON.stringify({\n        questionId: loadedQuestionIndex.toString(),\n        userName: userName,\n        body: formState.inputs.header.value + \"^^\" + formState.inputs.content.value\n      }), {});\n      closeForumEntryHandler();\n    } catch (err) {}\n  };\n\n  const openMessageHandler = (content, title, user, date) => {\n    setMsgContent(content);\n    setMsgTitle(title);\n    setMsgUser(user);\n    setMsgDate(date);\n    setShowMessage(true);\n  };\n\n  const closeMessageHandler = () => {\n    setShowMessage(false);\n  };\n\n  useEffect(() => {\n    if (props.index !== null && Object.keys(props.questions).length !== 0) {\n      setloadedQuestionIndex(props.index);\n      setQuestionBody(props.questions[props.index].questionBody);\n      setQuestionName(props.questions[props.index].questionName);\n      lastQuestionIndex = Object.keys(props.questions).length;\n      let test = JSON.stringify(props.questions[props.index].questionBody).replace(\"\\\\\\\\\", /\\\\/g);\n      console.log(\"test\");\n      console.log(test);\n    }\n\n    let messages = [];\n\n    if (Object.keys(props.messages).length !== 0) {\n      Object.values(props.messages).map(message => {\n        const bodySplit = message.body.split(\"^^\");\n        const messageTitle = bodySplit[0];\n        const messageContent = bodySplit[1];\n        messages.push( /*#__PURE__*/React.createElement(Card, {\n          className: \"forum-message__card\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"forum-message__card_button\",\n          onClick: () => {\n            openMessageHandler(messageContent, messageTitle, message.userName, message.messageDate);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"forum-message__card__left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          className: \"center\",\n          src: userIcon,\n          alt: \"user-icon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"forum-message__card__right\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"forum-message__card__right__top\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 19\n          }\n        }, messageTitle)), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"forum-message__card__right__buttom\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 19\n          }\n        }, message.userName, \" posted at \", message.messageDate))))));\n      });\n      setLoadedMessages(messages);\n      console.log(\"messages:\");\n      console.log(messages);\n    }\n  }, [props]);\n\n  const nextButtonHandler = () => props.onIndexChange(loadedQuestionIndex + 1);\n\n  const prevButtonHandler = () => props.onIndexChange(loadedQuestionIndex - 1);\n\n  const openForumEntryHandler = () => setShowForumEntry(true);\n\n  const closeForumEntryHandler = () => {\n    props.onNewForumMessage(loadedQuestionIndex);\n    setShowForumEntry(false);\n  };\n\n  const forumTabHandler = () => setIsForum(true);\n\n  const questionTabHandler = () => setIsForum(false);\n\n  let tabContent = [{\n    title: \"Question\",\n    content: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }\n    }, questionName), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }, questionBody))\n  }, {\n    title: \"Forum\",\n    content: /*#__PURE__*/React.createElement(\"div\", {\n      className: \"forum-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 16\n      }\n    }, loadedMessages)\n  }];\n\n  if (!props.questions || props.questions.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }\n    }, \"No questions found.\")));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    className: \"new-message__modal\",\n    show: showForumEntry,\n    onCancel: closeForumEntryHandler,\n    header: \"Course subjects\" // change this to courses name\n    ,\n    headerClass: \"new-message__modal-header\",\n    contentClass: \"course-item__modal-content\",\n    footerClass: \"course-item__modal-actions\",\n    footer: /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      onClick: forumMessageSubmitHandler,\n      disabled: !formState.isValid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }\n    }, \"Submit\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new-message__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, \"Forum entry form\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"header\",\n    type: \"text\",\n    placeholder: \"new message header\",\n    onInput: inputHandler,\n    validators: [VALIDATOR_REQUIRE()],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    element: \"textarea\",\n    id: \"content\",\n    type: \"textarea\",\n    rows: \"23\",\n    placeholder: \"new message content\",\n    onInput: inputHandler,\n    validators: [VALIDATOR_REQUIRE()],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Modal, {\n    className: \"forum-message__modal\",\n    show: showMessage,\n    onCancel: closeMessageHandler,\n    header: \"Forum message\" // change this to courses name\n    ,\n    headerClass: \"forum-message__modal-header\",\n    contentClass: \"forum-message__modal-content\",\n    footerClass: \"course-item__modal-actions\",\n    footer: /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: closeMessageHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 13\n      }\n    }, \"CLOSE\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 11\n    }\n  }, \"posted by \", msgUser, \" at \", msgDate), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 11\n    }\n  }, msgTitle), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 11\n    }\n  }, msgContent))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tabs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 11\n    }\n  }, tabContent.map((tab, idx) => /*#__PURE__*/React.createElement(Tab.TabPane, {\n    className: \"tab\",\n    key: `Tab-${idx}`,\n    tab: tab.title,\n    onTabSelected: idx === 1 ? forumTabHandler : questionTabHandler,\n    onTab: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 15\n    }\n  }, tab.content)))), isForum && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"forum-new\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    onClick: openForumEntryHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }\n  }, \"New\")), !isForum && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"questions-nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    disabled: loadedQuestionIndex === 1,\n    onClick: prevButtonHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }\n  }, \"Prev\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    disabled: loadedQuestionIndex === lastQuestionIndex,\n    onClick: nextButtonHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }\n  }, \"Next\"))));\n};\n\nexport default Question;","map":{"version":3,"sources":["/home/alex/Documents/mta/year 4/final project/Algros/src/problem/components/Question.js"],"names":["React","useEffect","useState","Card","Tab","Button","Modal","Input","useHttpClient","useForm","VALIDATOR_REQUIRE","lastQuestionIndex","Question","props","loadedQuestionIndex","setloadedQuestionIndex","questionBody","setQuestionBody","questionName","setQuestionName","loadedMessages","setLoadedMessages","showForumEntry","setShowForumEntry","showMessage","setShowMessage","isForum","setIsForum","msgContent","setMsgContent","msgTitle","setMsgTitle","msgUser","setMsgUser","msgDate","setMsgDate","isLoading","error","sendRequest","clearError","formState","inputHandler","setFormData","content","value","isValid","header","forumMessageSubmitHandler","event","preventDefault","userName","JSON","parse","localStorage","getItem","toString","sentMessageResponse","stringify","questionId","body","inputs","closeForumEntryHandler","err","openMessageHandler","title","user","date","closeMessageHandler","index","Object","keys","questions","length","test","replace","console","log","messages","values","map","message","bodySplit","split","messageTitle","messageContent","push","messageDate","userIcon","nextButtonHandler","onIndexChange","prevButtonHandler","openForumEntryHandler","onNewForumMessage","forumTabHandler","questionTabHandler","tabContent","tab","idx"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Tab from \"../../shared/components/Navigation/Tabs\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Modal from \"../../shared/components/UIElements/Modal\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport userIcon from \"./user-icon.svg\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { useForm } from \"../../shared/hooks/form-hooks\";\nimport { VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\n\nimport \"./Question.css\";\n\nlet lastQuestionIndex = 0;\n\nconst Question = (props) => {\n  const [loadedQuestionIndex, setloadedQuestionIndex] = useState(0);\n  const [questionBody, setQuestionBody] = useState(\"\");\n  const [questionName, setQuestionName] = useState(\"\");\n  const [loadedMessages, setLoadedMessages] = useState([]);\n  const [showForumEntry, setShowForumEntry] = useState(false);\n  const [showMessage, setShowMessage] = useState(false);\n  const [isForum, setIsForum] = useState(false);\n  const [msgContent, setMsgContent] = useState(\"\");\n  const [msgTitle, setMsgTitle] = useState(\"\");\n  const [msgUser, setMsgUser] = useState(\"\");\n  const [msgDate, setMsgDate] = useState(\"\");\n\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      content: {\n        value: \"\",\n        isValid: false,\n      },\n      header: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const forumMessageSubmitHandler = async (event) => {\n    event.preventDefault();\n    const userName = JSON.parse(\n      localStorage.getItem(\"userData\")\n    ).userName.toString();\n\n    try {\n      const sentMessageResponse = await sendRequest(\n        \"http://51.138.73.135:8080/Algors/sendMessage\",\n        \"POST\",\n        JSON.stringify({\n          questionId: loadedQuestionIndex.toString(),\n          userName: userName,\n          body:\n            formState.inputs.header.value +\n            \"^^\" +\n            formState.inputs.content.value,\n        }),\n        {}\n      );\n\n      closeForumEntryHandler();\n    } catch (err) {}\n  };\n\n  const openMessageHandler = (content, title, user, date) => {\n    setMsgContent(content);\n    setMsgTitle(title);\n    setMsgUser(user);\n    setMsgDate(date);\n    setShowMessage(true);\n  };\n\n  const closeMessageHandler = () => {\n    setShowMessage(false);\n  };\n\n  useEffect(() => {\n    if (props.index !== null && Object.keys(props.questions).length !== 0) {\n      setloadedQuestionIndex(props.index);\n      setQuestionBody(props.questions[props.index].questionBody);\n      setQuestionName(props.questions[props.index].questionName);\n      lastQuestionIndex = Object.keys(props.questions).length;\n      let test = JSON.stringify(props.questions[props.index].questionBody).replace(\"\\\\\\\\\", /\\\\/g);\n      console.log(\"test\");\n      console.log(test);\n\n    }\n\n    let messages = [];\n    if (Object.keys(props.messages).length !== 0) {\n      Object.values(props.messages).map((message) => {\n        const bodySplit = message.body.split(\"^^\");\n        const messageTitle = bodySplit[0];\n        const messageContent = bodySplit[1];\n\n        messages.push(\n          <Card className=\"forum-message__card\">\n            <button\n              className=\"forum-message__card_button\"\n              onClick={() => {\n                openMessageHandler(\n                  messageContent,\n                  messageTitle,\n                  message.userName,\n                  message.messageDate\n                );\n              }}\n            >\n              <div className=\"forum-message__card__left\">\n                <img className=\"center\" src={userIcon} alt=\"user-icon\" />\n              </div>\n              <div className=\"forum-message__card__right\">\n                <div className=\"forum-message__card__right__top\">\n                  <h2>{messageTitle}</h2>\n                </div>\n                <div className=\"forum-message__card__right__buttom\">\n                  <h4>\n                    {message.userName} posted at {message.messageDate}\n                  </h4>\n                </div>\n              </div>\n            </button>\n          </Card>\n        );\n      });\n      setLoadedMessages(messages);\n      console.log(\"messages:\");\n      console.log(messages);\n    }\n  }, [props]);\n\n  const nextButtonHandler = () => props.onIndexChange(loadedQuestionIndex + 1);\n\n  const prevButtonHandler = () => props.onIndexChange(loadedQuestionIndex - 1);\n\n  const openForumEntryHandler = () => setShowForumEntry(true);\n\n  const closeForumEntryHandler = () => {\n    props.onNewForumMessage(loadedQuestionIndex);\n    setShowForumEntry(false);\n  };\n\n  const forumTabHandler = () => setIsForum(true);\n\n  const questionTabHandler = () => setIsForum(false);\n\n  let tabContent = [\n    {\n      title: \"Question\",\n      content: (\n        <div>\n          <h1>{questionName}</h1>\n          <p>{questionBody}</p>\n        </div>\n      ),\n    },\n    {\n      title: \"Forum\",\n      content: <div className=\"forum-content\">{loadedMessages}</div>,\n    },\n  ];\n\n  if (!props.questions || props.questions.length === 0) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>No questions found.</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <Modal\n        className=\"new-message__modal\"\n        show={showForumEntry}\n        onCancel={closeForumEntryHandler}\n        header=\"Course subjects\" // change this to courses name\n        headerClass=\"new-message__modal-header\"\n        contentClass=\"course-item__modal-content\"\n        footerClass=\"course-item__modal-actions\"\n        footer={\n          <React.Fragment>\n            <Button\n              type=\"submit\"\n              onClick={forumMessageSubmitHandler}\n              disabled={!formState.isValid}\n            >\n              Submit\n            </Button>\n          </React.Fragment>\n        }\n      >\n        <div className=\"new-message__content\">\n          <h2>Forum entry form</h2>\n          <form>\n            <Input\n              element=\"input\"\n              id=\"header\"\n              type=\"text\"\n              placeholder=\"new message header\"\n              onInput={inputHandler}\n              validators={[VALIDATOR_REQUIRE()]}\n            />\n            <div className=\"\">\n              <Input\n                element=\"textarea\"\n                id=\"content\"\n                type=\"textarea\"\n                rows=\"23\"\n                placeholder=\"new message content\"\n                onInput={inputHandler}\n                validators={[VALIDATOR_REQUIRE()]}\n              />\n            </div>\n          </form>\n        </div>\n      </Modal>\n      <Modal\n        className=\"forum-message__modal\"\n        show={showMessage}\n        onCancel={closeMessageHandler}\n        header=\"Forum message\" // change this to courses name\n        headerClass=\"forum-message__modal-header\"\n        contentClass=\"forum-message__modal-content\"\n        footerClass=\"course-item__modal-actions\"\n        footer={\n          <React.Fragment>\n            <Button onClick={closeMessageHandler}>CLOSE</Button>\n          </React.Fragment>\n        }\n      >\n        <div className=\"map-container\">\n          <p>\n            posted by {msgUser} at {msgDate}\n          </p>\n          <h1>{msgTitle}</h1>\n          <h2>{msgContent}</h2>\n        </div>\n      </Modal>\n      <div className=\"question-content\">\n        <div className=\"tabs\">\n          <Tab>\n            {tabContent.map((tab, idx) => (\n              <Tab.TabPane\n                className=\"tab\"\n                key={`Tab-${idx}`}\n                tab={tab.title}\n                onTabSelected={idx === 1 ? forumTabHandler : questionTabHandler}\n                onTab\n              >\n                {tab.content}\n              </Tab.TabPane>\n            ))}\n          </Tab>\n        </div>\n        {isForum && (\n          <div className=\"forum-new\">\n            <Button type=\"button\" onClick={openForumEntryHandler}>\n              New\n            </Button>\n          </div>\n        )}\n        {!isForum && (\n          <div className=\"questions-nav\">\n            <Button\n              type=\"button\"\n              disabled={loadedQuestionIndex === 1}\n              onClick={prevButtonHandler}\n            >\n              Prev\n            </Button>\n            <Button\n              type=\"button\"\n              disabled={loadedQuestionIndex === lastQuestionIndex}\n              onClick={nextButtonHandler}\n            >\n              Next\n            </Button>\n          </div>\n        )}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Question;\n"]},"metadata":{},"sourceType":"module"}