{"ast":null,"code":"'use strict';\n\nconst visit = require('unist-util-visit');\n\nconst nodeToString = require('hast-util-to-string');\n\nconst refractor = require('refractor');\n\nmodule.exports = options => {\n  options = options || {};\n  return tree => {\n    visit(tree, 'element', visitor);\n  };\n\n  function visitor(node, index, parent) {\n    if (!parent || parent.tagName !== 'pre' || node.tagName !== 'code') {\n      return;\n    }\n\n    const lang = getLanguage(node);\n\n    if (lang === null) {\n      return;\n    }\n\n    let result;\n\n    try {\n      parent.properties.className = (parent.properties.className || []).concat('language-' + lang);\n      result = refractor.highlight(nodeToString(node), lang);\n    } catch (err) {\n      if (options.ignoreMissing && /Unknown language/.test(err.message)) {\n        return;\n      }\n\n      throw err;\n    }\n\n    node.children = result;\n  }\n};\n\nfunction getLanguage(node) {\n  const className = node.properties.className || [];\n\n  for (const classListItem of className) {\n    if (classListItem.slice(0, 9) === 'language-') {\n      return classListItem.slice(9).toLowerCase();\n    }\n  }\n\n  return null;\n}","map":null,"metadata":{},"sourceType":"script"}