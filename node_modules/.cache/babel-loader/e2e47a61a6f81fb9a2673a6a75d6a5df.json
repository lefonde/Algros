{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mor\\\\Documents\\\\final project BAK 2\\\\src\\\\authentication\\\\pages\\\\Auth.js\";\nimport React, { useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hooks\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport \"./Auth.css\";\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  const [formState, inputHandler, setFormData] = useForm({\n    name: {\n      value: \"\",\n      isValid: false\n    },\n    email: {\n      value: \"\",\n      isValid: false\n    },\n    password: {\n      value: \"\",\n      isValid: false\n    }\n  }, false);\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData({ ...formState.inputs,\n        name: undefined\n      }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setFormData({ ...formState.inputs,\n        name: {\n          value: \"\",\n          isValid: false\n        }\n      }, false);\n    }\n\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = event => {\n    event.preventDefault();\n\n    if (isLoginMode) {\n      setIsLoading(true);\n      fetch(\"http://51.138.73.135:8080/Algors/login\", {\n        method: \"POST\",\n        headers: {},\n        body: JSON.stringify({\n          email: formState.inputs.email.value,\n          userName: \"test\",\n          password: formState.inputs.password.value\n        })\n      }).then(response => {\n        console.log(response);\n        response.json().then(json => {\n          console.log(json);\n\n          if (json.userId === -1) {\n            throw new Error(\"Invalid credentials.\");\n          }\n\n          setIsLoading(false);\n          auth.login();\n        }).catch(err => {\n          console.log(err);\n          setIsLoading(false);\n          setError(err.message || \"Something went wrong, please try again.\");\n        });\n      });\n    } else {\n      setIsLoading(true);\n      fetch(\"http://51.138.73.135:8080/Algors/signUp\", {\n        method: \"POST\",\n        headers: {},\n        body: JSON.stringify({\n          email: formState.inputs.email.value,\n          userName: formState.inputs.name.value,\n          password: formState.inputs.password.value\n        })\n      }).then(response => {\n        console.log(response);\n        response.json().then(json => {\n          console.log(json);\n\n          if (json.userId === -1) {\n            throw new Error(\"User already exists.\");\n          }\n\n          setIsLoading(false);\n          auth.login();\n        }).catch(err => {\n          console.log(err);\n          setIsLoading(false);\n          setError(err.message || \"Something went wrong, please try again.\");\n        });\n      });\n    }\n\n    console.log(formState.inputs);\n  };\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: errorHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    className: \"authentication\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, \"Just a moment and you're in\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: authSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, !isLoginMode && /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"name\",\n    type: \"text\",\n    placeholder: \"name\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter your name.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"email\",\n    type: \"email\",\n    placeholder: \"email\",\n    validators: [VALIDATOR_EMAIL()],\n    errorText: \"Please enter a valid email address.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"password\",\n    type: \"password\",\n    placeholder: \"password\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid password, at least 5 characters.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"authentication__links\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"authentication__link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, \"forgot password?\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"authentication__link\",\n    onClick: switchModeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, \" \", isLoginMode ? \">new bro? sign up.\" : \"oh, we've met? login\", \" \")), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }, isLoginMode ? \"Sign in\" : \"Create acount\"))));\n};\n\nexport default Auth;","map":{"version":3,"sources":["C:/Users/mor/Documents/final project BAK 2/src/authentication/pages/Auth.js"],"names":["React","useState","useContext","Link","Card","Input","Button","ErrorModal","LoadingSpinner","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","useForm","AuthContext","Auth","auth","isLoginMode","setIsLoginMode","isLoading","setIsLoading","error","setError","formState","inputHandler","setFormData","name","value","isValid","email","password","switchModeHandler","inputs","undefined","prevMode","authSubmitHandler","event","preventDefault","fetch","method","headers","body","JSON","stringify","userName","then","response","console","log","json","userId","Error","login","catch","err","message","errorHandler"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\n\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hooks\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport \"./Auth.css\";\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      name: {\n        value: \"\",\n        isValid: false,\n      },\n      email: {\n        value: \"\",\n        isValid: false,\n      },\n      password: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined,\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: \"\",\n            isValid: false,\n          },\n        },\n        false\n      );\n    }\n    setIsLoginMode((prevMode) => !prevMode);\n  };\n\n  const authSubmitHandler = (event) => {\n    event.preventDefault();\n\n    if (isLoginMode) {\n      setIsLoading(true);\n      fetch(\"http://51.138.73.135:8080/Algors/login\", {\n        method: \"POST\",\n        headers: {},\n        body: JSON.stringify({\n          email: formState.inputs.email.value,\n          userName: \"test\",\n          password: formState.inputs.password.value,\n        }),\n      }).then((response) => {\n        console.log(response);\n\n        response\n          .json()\n          .then((json) => {\n            console.log(json);\n            if (json.userId === -1) {\n              throw new Error(\"Invalid credentials.\");\n            }\n            setIsLoading(false);\n            auth.login();\n          })\n          .catch((err) => {\n            console.log(err);\n            setIsLoading(false);\n            setError(err.message || \"Something went wrong, please try again.\");\n          });\n      });\n    } else {\n      setIsLoading(true);\n      fetch(\"http://51.138.73.135:8080/Algors/signUp\", {\n        method: \"POST\",\n        headers: {},\n        body: JSON.stringify({\n          email: formState.inputs.email.value,\n          userName: formState.inputs.name.value,\n          password: formState.inputs.password.value,\n        }),\n      }).then((response) => {\n        console.log(response);\n\n        response\n          .json()\n          .then((json) => {\n            console.log(json);\n            if (json.userId === -1) {\n              throw new Error(\"User already exists.\");\n            }\n            setIsLoading(false);\n            auth.login();\n          })\n          .catch((err) => {\n            console.log(err);\n            setIsLoading(false);\n            setError(err.message || \"Something went wrong, please try again.\");\n          });\n      });\n    }\n    console.log(formState.inputs);\n  };\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={errorHandler} />\n      <Card className=\"authentication\">\n        <h2>Just a moment and you're in</h2>\n        <form onSubmit={authSubmitHandler}>\n          {!isLoginMode && (\n            <Input\n              element=\"input\"\n              id=\"name\"\n              type=\"text\"\n              placeholder=\"name\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter your name.\"\n              onInput={inputHandler}\n            />\n          )}\n          <Input\n            element=\"input\"\n            id=\"email\"\n            type=\"email\"\n            placeholder=\"email\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email address.\"\n            onInput={inputHandler}\n          />\n          <Input\n            element=\"input\"\n            id=\"password\"\n            type=\"password\"\n            placeholder=\"password\"\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText=\"Please enter a valid password, at least 5 characters.\"\n            onInput={inputHandler}\n          />\n          <div className=\"authentication__links\">\n            {/* <Link className=\"authentication__link\">forgot password?</Link> */}\n            <button type=\"button\" className=\"authentication__link\">\n              forgot password?\n            </button>\n            <button\n              type=\"button\"\n              className=\"authentication__link\"\n              onClick={switchModeHandler}\n            >\n              {\" \"}\n              {isLoginMode ? \">new bro? sign up.\" : \"oh, we've met? login\"}{\" \"}\n            </button>\n            {/* <Link to={switchModeHandler} className=\"authentication__link\">new bro? sign up.</Link> */}\n          </div>\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            {isLoginMode ? \"Sign in\" : \"Create acount\"}\n          </Button>\n        </form>\n\n        {/* <Button inverse onClick={switchModeHandler}>\n        SWITCH TO {isLoginMode ? \"SIGNUP\" : \"LOGIN\"}\n      </Button> */}\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}